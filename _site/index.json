{
  "api/logiked.language.html": {
    "href": "api/logiked.language.html",
    "title": "Namespace logiked.language | Example Unity documentation",
    "keywords": "Namespace logiked.language Classes LogikedPlugin_Language Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Les paramètres du patch de langues par défauts sont configurables ici (Langue, Auteur, Version...)"
  },
  "api/logiked.language.LogikedPlugin_Language.html": {
    "href": "api/logiked.language.LogikedPlugin_Language.html",
    "title": "Class LogikedPlugin_Language | Example Unity documentation",
    "keywords": "Class LogikedPlugin_Language Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Les paramètres du patch de langues par défauts sont configurables ici (Langue, Auteur, Version...) Inheritance object Object ScriptableObject LogikedPlugin<LogikedPlugin_Language> LogikedPlugin_Language Inherited Members LogikedPlugin<LogikedPlugin_Language>.LabelName LogikedPlugin<LogikedPlugin_Language>.Instance LogikedPlugin<LogikedPlugin_Language>.Log(object, DebugC.ErrorLevel, Object) Namespace: logiked.language Assembly: Logiked_Language.dll Syntax [Serializable] public class LogikedPlugin_Language : LogikedPlugin<LogikedPlugin_Language> Properties | Improve this Doc View Source CreateSamplePoeditFile Creer une copie du patch de traduction au format \".po\" dans le dossier StreamingAssets afin d'encourager les joueurs à créer leur propre patches en partant de ce modèle. Declaration public bool CreateSamplePoeditFile { get; } Property Value Type Description bool | Improve this Doc View Source DefaultTranslation Le patch de traduction par défaut utilisé par le jeu. Declaration public TextAsset DefaultTranslation { get; } Property Value Type Description TextAsset | Improve this Doc View Source LanguageStreamingAssetPath Chemin des fichiers de localisation Declaration public static string LanguageStreamingAssetPath { get; } Property Value Type Description string | Improve this Doc View Source LogColors Couleur des logs de ce package Declaration public override sealed Color LogColors { get; } Property Value Type Description Color Overrides logiked.source.types.LogikedPlugin<logiked.language.LogikedPlugin_Language>.LogColors Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.language.translate.html": {
    "href": "api/logiked.language.translate.html",
    "title": "Namespace logiked.language.translate | Example Unity documentation",
    "keywords": "Namespace logiked.language.translate Classes LocalizedTextComponent Composant autonome qui affichage une chaine localisé sur un renderer de texte Unity (TextMesh, UnityEngine.UI.Text, TMPro.TextMeshPro, TMPro.TextMeshProUGUI) lstring Type de base des chaines localisés. A utiliser dans vos scripts comme une chaîne de caractère standard. class Script : MonoBehaviour { [SerializeField] private lstring localizedText; // Chaine traduite éditable dans unity } Les lstring sont modifiables depuis unity; elles contienent un duo (clé; valeur), automatiquement enregistrés vers le patch de traduction spécifié dans defaultTranslation. Consulter la section tutorial pour plus de détails. Les lstring sont castables directement en string void Test() { //Cast de la traduction du texte string currentTranslatedText = localizedText; } TranslationFileCheck Attribut qui permet d'afficher un message d'erreur dans l'inspecteur si aucun patch de traduction par défaut n'a été défini //Script nécessitant un patch de traduction correctement configuré public class MyCustomDialogSystem : MonoBehaviour { //Propose dans l'inespector de générer un patch de traduction si aucun n'a été crée [TranslationFileCheck] [SerializeField] private lstring text1; [SerializeField] private lstring text2; [SerializeField] private lstring text3; [SerializeField] private lstring text4; } note Ce script pourrait implémenter ILocalizedComponent TranslationHeaderInfos Information internes du patch (Auteur, Version, Langue..) TranslationInstance Instance parsée d'un fichier de traduction au format PoEdit. Lorsque un patch de traduction est chargé par le TranslationManager, cette classe est générée par GetFromFile(TextAsset). Elle est la représentation d'un patch de traduction et permet d'obtenir ses chaînes traduites. Certaines fonctions tels que sont disponibles seulement dans l'éditeur afin de pouvoir enregister les modifications du patch. Pour récuperer des chaines traduites et les informations du patch actuel, favoriser les méthodes de TranslationManager note Ces fonctions n'ont pas de raisons d'être utilisées pour un usage normal du plugin. Les classes telles que s'occupent déja de l'ajout et l'enregistrement des données. Cepandant elle restent accessibles dans le code éditeur. #if UNITY_EDITOR void AddNewKey() { //Récupère la traduction par défaut du jeu TranslationInstance patch = TranslationManager.DefaultTranslate; if (patch != null) { //Ajout de valeurs patch.SaveValue(\"strings.player.dialog1\", \"Hello evryoone\", true, \"jack speaking\"); patch.SaveValue(\"strings.player.dialog2\", \"Okay buddy\", true, \"bob speaking\"); //Suppression patch.RemoveKey(\"strings.player.dialog1\"); //Windows dialog Ask \"Are you sure ?\" patch.HeaderInfos.Author = \"Chon Jenna\"; patch.HeaderInfos.Version = \"1.2\"; patch.HeaderInfos.Description = \"My custom patch\"; patch.HeaderInfos.Language = \"En_US\"; patch.SaveFile(); //Afficher un GenericMenu contenant une liste des clées existantes GenerateMenu( m => Debug.Log($\"Selected key : {m}\")); } } #endif TranslationManager Manager pour les patch de traductions. Utilise majoritairement des Méthodes statiques, afin de pouvoir fonctionner dans l'éditeur sans avoir d'instance dans la scène. Cepandant, il est recommandé d'avoir une instance de ce script à coté d'un GameManager. De cette manière, on peut on peut modifier le patch de langue actuel depuis un simple boutton UI appelant LoadLanguage(string). public class RandomClass : MonoBehaviour { public void Start() { //Obtenir les infors du patch actuel var currentPatch = TranslationManager.GetCurrentPatchInfos(); Debug.Log(currentPatch.Author); Debug.Log(currentPatch.Version); //Changer de patch TranslationManager.LoadLanguagePatch(\"Fr_patch\"); //Obtenir une clée traduite var dialog1 = TranslationManager.GetTranslatedValue(\"string.dialog.speak1\"); #if UNITY_EDITOR //Afficher un GenericMenu contenant une liste des clées existantes TranslationManager.DefaultTranslate.GenerateMenu(m => Debug.Log($\"Selected key : {m}\")); #endif } } note L'utilisation de LocalizedTextComponent et de lstring simplifient grandement l'implémentation du plugin en offrant des interfaces intuitives. Interfaces ILocalizedComponent Interface à utiliser sur les composants qui affichent du texte localisé. Les composants ayant cette interface sont refresh automatiquement par UpdateSceneLocalizedStrings(), appelé au rechargement d'un patch de langues. public class MyComponent : ILocalizedComponent { lstring localizedString; TextMesh textRender; public void RefreshTranslate() { textRender.text = localizedString; // Cast du nouveau texte modifié rechargé } }"
  },
  "api/logiked.language.translate.ILocalizedComponent.html": {
    "href": "api/logiked.language.translate.ILocalizedComponent.html",
    "title": "Interface ILocalizedComponent | Example Unity documentation",
    "keywords": "Interface ILocalizedComponent Interface à utiliser sur les composants qui affichent du texte localisé. Les composants ayant cette interface sont refresh automatiquement par UpdateSceneLocalizedStrings(), appelé au rechargement d'un patch de langues. public class MyComponent : ILocalizedComponent { lstring localizedString; TextMesh textRender; public void RefreshTranslate() { textRender.text = localizedString; // Cast du nouveau texte modifié rechargé } } Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax public interface ILocalizedComponent Methods | Improve this Doc View Source RefreshTranslate() Fonction à implémenter pour refresh le texte localisé. Appelée automatiquement par UpdateSceneLocalizedStrings(), au rechargement d'un patch de langues. Declaration void RefreshTranslate() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.LocalizedTextComponent.html": {
    "href": "api/logiked.language.translate.LocalizedTextComponent.html",
    "title": "Class LocalizedTextComponent | Example Unity documentation",
    "keywords": "Class LocalizedTextComponent Composant autonome qui affichage une chaine localisé sur un renderer de texte Unity (TextMesh, UnityEngine.UI.Text, TMPro.TextMeshPro, TMPro.TextMeshProUGUI) Inheritance object Object Component Behaviour MonoBehaviour LocalizedTextComponent Implements ILocalizedComponent Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax [AddComponentMenu(\"Logiked/Localized UI Text\")] [DisallowMultipleComponent] [ExecuteAlways] public class LocalizedTextComponent : MonoBehaviour, ILocalizedComponent Properties | Improve this Doc View Source TextMesh Le composant utilisé pour l'affichage de la chaine Declaration public TextMesh TextMesh { get; } Property Value Type Description TextMesh | Improve this Doc View Source TextMeshPro Le composant utilisé pour l'affichage de la chaine Declaration public TextMeshPro TextMeshPro { get; } Property Value Type Description TextMeshPro | Improve this Doc View Source TextMeshProUGUI Le composant utilisé pour l'affichage de la chaine Declaration public TextMeshProUGUI TextMeshProUGUI { get; } Property Value Type Description TextMeshProUGUI | Improve this Doc View Source TextUi Le composant utilisé pour l'affichage de la chaine Declaration public Text TextUi { get; } Property Value Type Description Text Methods | Improve this Doc View Source RefreshTranslate() Fonction à implémenter pour refresh le texte localisé. Appelée automatiquement par UpdateSceneLocalizedStrings(), au rechargement d'un patch de langues. Declaration public void RefreshTranslate() Implements ILocalizedComponent Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.lstring.html": {
    "href": "api/logiked.language.translate.lstring.html",
    "title": "Class lstring | Example Unity documentation",
    "keywords": "Class lstring Type de base des chaines localisés. A utiliser dans vos scripts comme une chaîne de caractère standard. class Script : MonoBehaviour { [SerializeField] private lstring localizedText; // Chaine traduite éditable dans unity } Les lstring sont modifiables depuis unity; elles contienent un duo (clé; valeur), automatiquement enregistrés vers le patch de traduction spécifié dans defaultTranslation. Consulter la section tutorial pour plus de détails. Les lstring sont castables directement en string void Test() { //Cast de la traduction du texte string currentTranslatedText = localizedText; } Inheritance object lstring Implements OnRemoveObjectEvent Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax [Serializable] public class lstring : OnRemoveObjectEvent Constructors | Improve this Doc View Source lstring(string) Declaration public lstring(string content = \"\") Parameters Type Name Description string content Contenu brut de la chaine (sans traduction). Ce constructeur sert principalement à gerer les conversions Strings/Lstrings sans se soucier de la traduction de la chaîne. Properties | Improve this Doc View Source TranslateKey La clé de la traduction de cette chaîne, contenue dans le patch de traduction. Declaration public string TranslateKey { get; } Property Value Type Description string Methods | Improve this Doc View Source GetTranslated() Obtenir le texte traduit. Cast la chaine en string retourne le même résultat. Declaration public string GetTranslated() Returns Type Description string Texte traduit Operators | Improve this Doc View Source implicit operator string(lstring) Conversion automatique en String traduite Declaration public static implicit operator string(lstring d) Parameters Type Name Description lstring d La Lstring à traduire Returns Type Description string | Improve this Doc View Source implicit operator lstring(string) Conversion automatique en Lstring des chaînes Declaration public static implicit operator lstring(string s) Parameters Type Name Description string s Returns Type Description lstring Implements OnRemoveObjectEvent Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.TranslationFileCheck.html": {
    "href": "api/logiked.language.translate.TranslationFileCheck.html",
    "title": "Class TranslationFileCheck | Example Unity documentation",
    "keywords": "Class TranslationFileCheck Attribut qui permet d'afficher un message d'erreur dans l'inspecteur si aucun patch de traduction par défaut n'a été défini //Script nécessitant un patch de traduction correctement configuré public class MyCustomDialogSystem : MonoBehaviour { //Propose dans l'inespector de générer un patch de traduction si aucun n'a été crée [TranslationFileCheck] [SerializeField] private lstring text1; [SerializeField] private lstring text2; [SerializeField] private lstring text3; [SerializeField] private lstring text4; } note Ce script pourrait implémenter ILocalizedComponent Inheritance object Attribute PropertyAttribute FutureFieldAttribute TranslationFileCheck Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax public class TranslationFileCheck : FutureFieldAttribute Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.TranslationHeaderInfos.html": {
    "href": "api/logiked.language.translate.TranslationHeaderInfos.html",
    "title": "Class TranslationHeaderInfos | Example Unity documentation",
    "keywords": "Class TranslationHeaderInfos Information internes du patch (Auteur, Version, Langue..) Inheritance object TranslationHeaderInfos Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax [Serializable] public class TranslationHeaderInfos Constructors | Improve this Doc View Source TranslationHeaderInfos(string, string, string, string) Constructeur Declaration public TranslationHeaderInfos(string language, string author, string version, string descritpion) Parameters Type Name Description string language Code langue du patch (ex : En_US, FR_fr) string author Auteur du patch string version Version du patch string descritpion Description brève Properties | Improve this Doc View Source Author Autheur du fichier Declaration public string Author { get; } Property Value Type Description string | Improve this Doc View Source Description Description brève fournie par le créateur du patch Declaration public string Description { get; } Property Value Type Description string | Improve this Doc View Source Language Code language du fichier Declaration public string Language { get; } Property Value Type Description string | Improve this Doc View Source Version Auteur du fichier Declaration public string Version { get; } Property Value Type Description string Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.TranslationInstance.html": {
    "href": "api/logiked.language.translate.TranslationInstance.html",
    "title": "Class TranslationInstance | Example Unity documentation",
    "keywords": "Class TranslationInstance Instance parsée d'un fichier de traduction au format PoEdit. Lorsque un patch de traduction est chargé par le TranslationManager, cette classe est générée par GetFromFile(TextAsset). Elle est la représentation d'un patch de traduction et permet d'obtenir ses chaînes traduites. Certaines fonctions tels que sont disponibles seulement dans l'éditeur afin de pouvoir enregister les modifications du patch. Pour récuperer des chaines traduites et les informations du patch actuel, favoriser les méthodes de TranslationManager note Ces fonctions n'ont pas de raisons d'être utilisées pour un usage normal du plugin. Les classes telles que s'occupent déja de l'ajout et l'enregistrement des données. Cepandant elle restent accessibles dans le code éditeur. #if UNITY_EDITOR void AddNewKey() { //Récupère la traduction par défaut du jeu TranslationInstance patch = TranslationManager.DefaultTranslate; if (patch != null) { //Ajout de valeurs patch.SaveValue(\"strings.player.dialog1\", \"Hello evryoone\", true, \"jack speaking\"); patch.SaveValue(\"strings.player.dialog2\", \"Okay buddy\", true, \"bob speaking\"); //Suppression patch.RemoveKey(\"strings.player.dialog1\"); //Windows dialog Ask \"Are you sure ?\" patch.HeaderInfos.Author = \"Chon Jenna\"; patch.HeaderInfos.Version = \"1.2\"; patch.HeaderInfos.Description = \"My custom patch\"; patch.HeaderInfos.Language = \"En_US\"; patch.SaveFile(); //Afficher un GenericMenu contenant une liste des clées existantes GenerateMenu( m => Debug.Log($\"Selected key : {m}\")); } } #endif Inheritance object TranslationInstance Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax public class TranslationInstance Properties | Improve this Doc View Source FileName Le nom du fichier associé Declaration public string FileName { get; } Property Value Type Description string | Improve this Doc View Source HeaderInfos Information internes du patch (Auteur, Version, Langue..) Declaration public TranslationHeaderInfos HeaderInfos { get; } Property Value Type Description TranslationHeaderInfos Methods | Improve this Doc View Source GetFromFile(TextAsset) Declaration public static TranslationInstance GetFromFile(TextAsset text) Parameters Type Name Description TextAsset text Returns Type Description TranslationInstance | Improve this Doc View Source GetValue(string) Obtenir la valeur associée à la clé dans cette traduction Declaration public string GetValue(string stringId) Parameters Type Name Description string stringId La clé Returns Type Description string La traduction. Retourne Null en cas de clé non trouvée. | Improve this Doc View Source HasKey(string) Rechercher si le patch contient la clé de traduction Declaration public bool HasKey(string stringId) Parameters Type Name Description string stringId Clée à recherher Returns Type Description bool La clé est-t-elle disponible dans le patch ? Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.language.translate.TranslationManager.html": {
    "href": "api/logiked.language.translate.TranslationManager.html",
    "title": "Class TranslationManager | Example Unity documentation",
    "keywords": "Class TranslationManager Manager pour les patch de traductions. Utilise majoritairement des Méthodes statiques, afin de pouvoir fonctionner dans l'éditeur sans avoir d'instance dans la scène. Cepandant, il est recommandé d'avoir une instance de ce script à coté d'un GameManager. De cette manière, on peut on peut modifier le patch de langue actuel depuis un simple boutton UI appelant LoadLanguage(string). public class RandomClass : MonoBehaviour { public void Start() { //Obtenir les infors du patch actuel var currentPatch = TranslationManager.GetCurrentPatchInfos(); Debug.Log(currentPatch.Author); Debug.Log(currentPatch.Version); //Changer de patch TranslationManager.LoadLanguagePatch(\"Fr_patch\"); //Obtenir une clée traduite var dialog1 = TranslationManager.GetTranslatedValue(\"string.dialog.speak1\"); #if UNITY_EDITOR //Afficher un GenericMenu contenant une liste des clées existantes TranslationManager.DefaultTranslate.GenerateMenu(m => Debug.Log($\"Selected key : {m}\")); #endif } } note L'utilisation de LocalizedTextComponent et de lstring simplifient grandement l'implémentation du plugin en offrant des interfaces intuitives. Inheritance object Object Component Behaviour MonoBehaviour IBaseManager BaseManager<TranslationManager> TranslationManager Inherited Members BaseManager<TranslationManager>.AlreadyInit BaseManager<TranslationManager>.Instance BaseManager<TranslationManager>.Initialization() Namespace: logiked.language.translate Assembly: Logiked_Language.dll Syntax [ExecuteAlways] [Serializable] [AddComponentMenu(\"Logiked/Translation Manager\")] public sealed class TranslationManager : BaseManager<TranslationManager> Methods | Improve this Doc View Source GetCurrentPatchInfos() Retourne les informations d'en-tête du patch actuellement utilisé (langue, description, version..) Declaration public static TranslationHeaderInfos GetCurrentPatchInfos() Returns Type Description TranslationHeaderInfos Les informations du patch actuel | Improve this Doc View Source GetTranslatedValue(string, bool) Obtenir un texte traduit. Si la chaine n'est pas disponible dans le patch actuel, c'est la valeur contenu dans le patch par défaut qui est retournée. Declaration public static string GetTranslatedValue(string id, bool warnIfNull = false) Parameters Type Name Description string id La clé du texte à obtenir bool warnIfNull Log un message d'erreur si la clé n'a pas été trouvée Returns Type Description string La chaine traduite (Null aucune chaîne n'a été trouvée) | Improve this Doc View Source InitManager() Declaration protected override void InitManager() Overrides IBaseManager.InitManager() | Improve this Doc View Source LoadLanguage(string) Charge le patch de langue contenu dans le dossier StreamingAssets/Language (Ne pas preciser l'extension) Un code vide signifie le patch de traduction par défaut. Declaration public void LoadLanguage(string fileName = \"\") Parameters Type Name Description string fileName Le nom du fichier à utiliser | Improve this Doc View Source LoadLanguagePatch(string) Raccourci statique vers LoadLanguage(string). Charge le patch de langue contenu dans le dossier StreamingAssets/Language (Ne pas preciser l'extension) Un code vide signifie le patch de traduction par défaut. Declaration public static void LoadLanguagePatch(string fileName = \"\") Parameters Type Name Description string fileName | Improve this Doc View Source RestartTranslate() Rechargement du patch par défaut Declaration public static void RestartTranslate() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.DrawSpriteBox.html": {
    "href": "api/logiked.source.attributes.DrawSpriteBox.html",
    "title": "Class DrawSpriteBox | Example Unity documentation",
    "keywords": "Class DrawSpriteBox Dessine un champ de sprite en carré, c'est plus visuel qu'une ligne Inheritance object Attribute PropertyAttribute FutureFieldAttribute DrawSpriteBox Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class DrawSpriteBox : FutureFieldAttribute Constructors | Improve this Doc View Source DrawSpriteBox(bool, float) Declaration public DrawSpriteBox(bool showLabel = false, float size = 72) Parameters Type Name Description bool showLabel float size Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.FieldSectionBegin.html": {
    "href": "api/logiked.source.attributes.FieldSectionBegin.html",
    "title": "Class FieldSectionBegin | Example Unity documentation",
    "keywords": "Class FieldSectionBegin [Décorateur qui se dessine en premier] Ouvre une nouvelle section avec un titre pour l'organisation des champs dans l'inspector. Ne fonctionne pas sur les arrays !! Inheritance object Attribute PropertyAttribute FutureFieldAttribute FieldSectionGui FieldSectionBegin Inherited Members FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class FieldSectionBegin : FieldSectionGui Constructors | Improve this Doc View Source FieldSectionBegin(string, bool) Declaration public FieldSectionBegin(string title = \"\", bool doubleSection = false) Parameters Type Name Description string title bool doubleSection Properties | Improve this Doc View Source ArrayInteractionMode [WIP TEST] : Défini comment cet attribut se comporte quand il est disposé sur un array Declaration public override FutureFieldAttribute.AttributeArrayInteraction ArrayInteractionMode { get; } Property Value Type Description FutureFieldAttribute.AttributeArrayInteraction Overrides FutureFieldAttribute.ArrayInteractionMode Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.FieldSectionColumn.html": {
    "href": "api/logiked.source.attributes.FieldSectionColumn.html",
    "title": "Class FieldSectionColumn | Example Unity documentation",
    "keywords": "Class FieldSectionColumn [Décorateur qui se dessine avant la propriété] Ajoute une colonne à la section actuelle Ne fonctionne pas sur les arrays !! Inheritance object Attribute PropertyAttribute FutureFieldAttribute FieldSectionGui FieldSectionColumn Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class FieldSectionColumn : FieldSectionGui Constructors | Improve this Doc View Source FieldSectionColumn() Declaration public FieldSectionColumn() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.FieldSectionEnd.html": {
    "href": "api/logiked.source.attributes.FieldSectionEnd.html",
    "title": "Class FieldSectionEnd | Example Unity documentation",
    "keywords": "Class FieldSectionEnd Ferme une section [Décorateur qui se dessine aprés la propriété de base] Ne fonctionne pas sur les arrays !! Inheritance object Attribute PropertyAttribute FutureFieldAttribute FieldSectionGui FieldSectionEnd Inherited Members FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class FieldSectionEnd : FieldSectionGui Constructors | Improve this Doc View Source FieldSectionEnd() Declaration public FieldSectionEnd() Properties | Improve this Doc View Source ArrayInteractionMode [WIP TEST] : Défini comment cet attribut se comporte quand il est disposé sur un array Declaration public override FutureFieldAttribute.AttributeArrayInteraction ArrayInteractionMode { get; } Property Value Type Description FutureFieldAttribute.AttributeArrayInteraction Overrides FutureFieldAttribute.ArrayInteractionMode Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.FieldSectionGui.html": {
    "href": "api/logiked.source.attributes.FieldSectionGui.html",
    "title": "Class FieldSectionGui | Example Unity documentation",
    "keywords": "Class FieldSectionGui Classe abstraite pour des décorateur de section. Voir FieldSectionBegin, FieldSectionEnd et FieldSectionColumn Inheritance object Attribute PropertyAttribute FutureFieldAttribute FieldSectionGui FieldSectionBegin FieldSectionColumn FieldSectionEnd Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Property|AttributeTargets.Field)] public abstract class FieldSectionGui : FutureFieldAttribute Constructors | Improve this Doc View Source FieldSectionGui(string) Declaration public FieldSectionGui(string title = \"\") Parameters Type Name Description string title Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.FieldSizeAttribute.html": {
    "href": "api/logiked.source.attributes.FieldSizeAttribute.html",
    "title": "Class FieldSizeAttribute | Example Unity documentation",
    "keywords": "Class FieldSizeAttribute Dessine un champ de sprite en carré, c'est plus visuel qu'une ligne Inheritance object Attribute PropertyAttribute FutureFieldAttribute FieldSizeAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public sealed class FieldSizeAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source FieldSizeAttribute(float, bool) Declaration public FieldSizeAttribute(float labelWidthCoef = 1, bool modifyWidth = true) Parameters Type Name Description float labelWidthCoef bool modifyWidth Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.GreyedField.html": {
    "href": "api/logiked.source.attributes.GreyedField.html",
    "title": "Class GreyedField | Example Unity documentation",
    "keywords": "Class GreyedField Grise la propriété dans l'inspecteur afin de ne pas pouvoir l'editer Inheritance object Attribute PropertyAttribute FutureFieldAttribute GreyedField Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class GreyedField : FutureFieldAttribute Constructors | Improve this Doc View Source GreyedField() Declaration public GreyedField() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.GuiMethodAttribute.html": {
    "href": "api/logiked.source.attributes.GuiMethodAttribute.html",
    "title": "Class GuiMethodAttribute | Example Unity documentation",
    "keywords": "Class GuiMethodAttribute Inheritance object Attribute PropertyAttribute FutureFieldAttribute GuiMethodAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class GuiMethodAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source GuiMethodAttribute(string, params object[]) Declaration public GuiMethodAttribute(string methodName, params object[] parameters) Parameters Type Name Description string methodName object[] parameters Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.HideInNormalInspectorAttribute.html": {
    "href": "api/logiked.source.attributes.HideInNormalInspectorAttribute.html",
    "title": "Class HideInNormalInspectorAttribute | Example Unity documentation",
    "keywords": "Class HideInNormalInspectorAttribute Masque la propriété dans l'inspecteur meme si elle est publique / serialisable (mais pas quand l'inspecteur est en mode Debug) Inheritance object Attribute PropertyAttribute FutureFieldAttribute HideInNormalInspectorAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class HideInNormalInspectorAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source HideInNormalInspectorAttribute() Declaration public HideInNormalInspectorAttribute() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.html": {
    "href": "api/logiked.source.attributes.html",
    "title": "Namespace logiked.source.attributes | Example Unity documentation",
    "keywords": "Namespace logiked.source.attributes Classes DrawSpriteBox Dessine un champ de sprite en carré, c'est plus visuel qu'une ligne FieldSectionBegin [Décorateur qui se dessine en premier] Ouvre une nouvelle section avec un titre pour l'organisation des champs dans l'inspector. Ne fonctionne pas sur les arrays !! FieldSectionColumn [Décorateur qui se dessine avant la propriété] Ajoute une colonne à la section actuelle Ne fonctionne pas sur les arrays !! FieldSectionEnd Ferme une section [Décorateur qui se dessine aprés la propriété de base] Ne fonctionne pas sur les arrays !! FieldSectionGui Classe abstraite pour des décorateur de section. Voir FieldSectionBegin, FieldSectionEnd et FieldSectionColumn FieldSizeAttribute Dessine un champ de sprite en carré, c'est plus visuel qu'une ligne GreyedField Grise la propriété dans l'inspecteur afin de ne pas pouvoir l'editer GuiMethodAttribute HideInNormalInspectorAttribute Masque la propriété dans l'inspecteur meme si elle est publique / serialisable (mais pas quand l'inspecteur est en mode Debug) LayerAttribute Permet à un entier d'être une liste de Layer. MinMaxRangeSlider Permet d'avoir un slider de Range min-max. A poser sur un Vector2 MonoScriptAttribute Permet d'assigner un MonoScript à une chaine de caractères. Utile pour la reflection. PopupFieldAttribute Liste de selection selon un array de String, dont le nom est à préciser en paramètre. RangeLogikedAttribute Attribut similaire à UnityEngine.Range(), mais compatible avec tout les autres attributs Logiked. RangeVfloatAttribute Attribut similaire à UnityEngine.Range(), mais compatible avec tout les autres attributs Logiked. RealtimeEditComponent Permet d'editer un composant particulier sur un prefab, dans le même inspector ShowIfAttribute Attribut qui affiche(ou non) les champs sur lequel il est disposé. Todo : faire un Contexte parent pour que les attributs qui utilisent du SAME ou NOTSAME fonctionne avec des classes imbriqués ShowIfAttribute.ShowCalculation Représentation d'un calcul pour l'attribut ShowIf ShowIfSameAttribute Attribut qui répète le comportement du dernier ShowIF utilisé. Racourci du constructeur ShowIfAttribute avec le paramètre Same. Todo : faire un Contexte parent pour que les attributs qui utilisent du SAME ou NOTSAME fonctionne avec des classes imbriqués. SortingLayerAttribute Dessine un entier en mode Sorting layer Enums ShowIfAttribute.ComputeMode ShowIfOperations Les différents type de comparaisons pour l'attribut ShowIfAttribute ShowIfRepeatMode Parametre de répetitions pour l'attribut ShowIfAttribute. Mettez ShowIfRepeatMode.Same dans le constructeur de l'attribut pour qu'il execute la même comparaison que le précédent attribut."
  },
  "api/logiked.source.attributes.LayerAttribute.html": {
    "href": "api/logiked.source.attributes.LayerAttribute.html",
    "title": "Class LayerAttribute | Example Unity documentation",
    "keywords": "Class LayerAttribute Permet à un entier d'être une liste de Layer. Inheritance object Attribute PropertyAttribute FutureFieldAttribute LayerAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class LayerAttribute : FutureFieldAttribute Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.MinMaxRangeSlider.html": {
    "href": "api/logiked.source.attributes.MinMaxRangeSlider.html",
    "title": "Class MinMaxRangeSlider | Example Unity documentation",
    "keywords": "Class MinMaxRangeSlider Permet d'avoir un slider de Range min-max. A poser sur un Vector2 Inheritance object Attribute PropertyAttribute FutureFieldAttribute MinMaxRangeSlider Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class MinMaxRangeSlider : FutureFieldAttribute Constructors | Improve this Doc View Source MinMaxRangeSlider(float, float) Declaration public MinMaxRangeSlider(float min, float max) Parameters Type Name Description float min float max Fields | Improve this Doc View Source max Declaration public float? max Field Value Type Description float? | Improve this Doc View Source maxConstraintFloat Si vous souhaitez clamp la valeur max autorisée, selon une autre variable, specifier son nom ici Declaration public string maxConstraintFloat Field Value Type Description string | Improve this Doc View Source min Declaration public float min Field Value Type Description float | Improve this Doc View Source minConstraintFloat Si vous souhaitez clamp la valeur min autorisée, selon une autre variable, specifier son nom ici Declaration public string minConstraintFloat Field Value Type Description string Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.MonoScriptAttribute.html": {
    "href": "api/logiked.source.attributes.MonoScriptAttribute.html",
    "title": "Class MonoScriptAttribute | Example Unity documentation",
    "keywords": "Class MonoScriptAttribute Permet d'assigner un MonoScript à une chaine de caractères. Utile pour la reflection. Inheritance object Attribute PropertyAttribute FutureFieldAttribute MonoScriptAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class MonoScriptAttribute : FutureFieldAttribute Fields | Improve this Doc View Source type Declaration public Type type Field Value Type Description Type Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.PopupFieldAttribute.html": {
    "href": "api/logiked.source.attributes.PopupFieldAttribute.html",
    "title": "Class PopupFieldAttribute | Example Unity documentation",
    "keywords": "Class PopupFieldAttribute Liste de selection selon un array de String, dont le nom est à préciser en paramètre. Inheritance object Attribute PropertyAttribute FutureFieldAttribute PopupFieldAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class PopupFieldAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source PopupFieldAttribute(string) Declaration public PopupFieldAttribute(string fieldName) Parameters Type Name Description string fieldName Le nom du champ/propriété qui sert de liste de string, relatif à cet objet. Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.RangeLogikedAttribute.html": {
    "href": "api/logiked.source.attributes.RangeLogikedAttribute.html",
    "title": "Class RangeLogikedAttribute | Example Unity documentation",
    "keywords": "Class RangeLogikedAttribute Attribut similaire à UnityEngine.Range(), mais compatible avec tout les autres attributs Logiked. Inheritance object Attribute PropertyAttribute FutureFieldAttribute RangeLogikedAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class RangeLogikedAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source RangeLogikedAttribute(int, int) Declaration public RangeLogikedAttribute(int min, int max) Parameters Type Name Description int min int max | Improve this Doc View Source RangeLogikedAttribute(float, float) Declaration public RangeLogikedAttribute(float min, float max) Parameters Type Name Description float min float max Fields | Improve this Doc View Source max Declaration public readonly float max Field Value Type Description float | Improve this Doc View Source min Declaration public readonly float min Field Value Type Description float Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.RangeVfloatAttribute.html": {
    "href": "api/logiked.source.attributes.RangeVfloatAttribute.html",
    "title": "Class RangeVfloatAttribute | Example Unity documentation",
    "keywords": "Class RangeVfloatAttribute Attribut similaire à UnityEngine.Range(), mais compatible avec tout les autres attributs Logiked. Inheritance object Attribute PropertyAttribute FutureFieldAttribute RangeVfloatAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class RangeVfloatAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source RangeVfloatAttribute(int, int) Declaration public RangeVfloatAttribute(int min, int max) Parameters Type Name Description int min int max | Improve this Doc View Source RangeVfloatAttribute(float, float) Declaration public RangeVfloatAttribute(float min, float max) Parameters Type Name Description float min float max Fields | Improve this Doc View Source max Declaration public readonly float max Field Value Type Description float | Improve this Doc View Source min Declaration public readonly float min Field Value Type Description float Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.RealtimeEditComponent.html": {
    "href": "api/logiked.source.attributes.RealtimeEditComponent.html",
    "title": "Class RealtimeEditComponent | Example Unity documentation",
    "keywords": "Class RealtimeEditComponent Permet d'editer un composant particulier sur un prefab, dans le même inspector Inheritance object Attribute PropertyAttribute FutureFieldAttribute RealtimeEditComponent Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class RealtimeEditComponent : FutureFieldAttribute Constructors | Improve this Doc View Source RealtimeEditComponent(Type) Declaration public RealtimeEditComponent(Type component) Parameters Type Name Description Type component Le type du composant à editer sur le prefab Fields | Improve this Doc View Source componentType Declaration public Type componentType Field Value Type Description Type | Improve this Doc View Source sectionOpen Declaration public bool sectionOpen Field Value Type Description bool Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.root.FutureFieldAttribute.AttributeArrayInteraction.html": {
    "href": "api/logiked.source.attributes.root.FutureFieldAttribute.AttributeArrayInteraction.html",
    "title": "Enum FutureFieldAttribute.AttributeArrayInteraction | Example Unity documentation",
    "keywords": "Enum FutureFieldAttribute.AttributeArrayInteraction [WIP TEST] :Défini comment cet attribut se comporte quand il est disposé sur un array Namespace: logiked.source.attributes.root Assembly: Logiked_Source.dll Syntax public enum FutureFieldAttribute.AttributeArrayInteraction Fields Name Description ApplyOnEachElement ApplyOnFirstElement ApplyOnLastElement Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.root.FutureFieldAttribute.AttributeContext.html": {
    "href": "api/logiked.source.attributes.root.FutureFieldAttribute.AttributeContext.html",
    "title": "Class FutureFieldAttribute.AttributeContext | Example Unity documentation",
    "keywords": "Class FutureFieldAttribute.AttributeContext Inheritance object FutureFieldAttribute.AttributeContext Namespace: logiked.source.attributes.root Assembly: Logiked_Source.dll Syntax public class FutureFieldAttribute.AttributeContext Fields | Improve this Doc View Source AttributeHeight Declaration public float AttributeHeight Field Value Type Description float | Improve this Doc View Source datas Declaration public Dictionary<string, object> datas Field Value Type Description Dictionary<string, object> Methods | Improve this Doc View Source GetData<T>(string) Declaration public T GetData<T>(string name) Parameters Type Name Description string name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SetData<T>(string, T) Declaration public void SetData<T>(string name, T value) Parameters Type Name Description string name T value Type Parameters Name Description T Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.root.FutureFieldAttribute.html": {
    "href": "api/logiked.source.attributes.root.FutureFieldAttribute.html",
    "title": "Class FutureFieldAttribute | Example Unity documentation",
    "keywords": "Class FutureFieldAttribute Attribut gérénique permettant de simplifier l'implémentation de plusieurs Drawers sur un meme champ. Peut etre override sur vos custom drawers Inheritance object Attribute PropertyAttribute FutureFieldAttribute TranslationFileCheck DrawSpriteBox FieldSectionGui FieldSizeAttribute GreyedField GuiMethodAttribute HideInNormalInspectorAttribute LayerAttribute MinMaxRangeSlider MonoScriptAttribute PopupFieldAttribute RangeLogikedAttribute RangeVfloatAttribute RealtimeEditComponent ShowIfAttribute SortingLayerAttribute DatabaseCanMaskField DatabaseCategoryNumberAttribue DatabaseTagNumberAttribute EditScriptableAttribute Inherited Members Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes.root Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public abstract class FutureFieldAttribute : PropertyAttribute Constructors | Improve this Doc View Source FutureFieldAttribute() Declaration public FutureFieldAttribute() Fields | Improve this Doc View Source propertyAlreadyDrawn Declaration public bool propertyAlreadyDrawn Field Value Type Description bool | Improve this Doc View Source propertyIndex Declaration public int propertyIndex Field Value Type Description int | Improve this Doc View Source stored Liste de tout les attributs stockés Declaration public List<object> stored Field Value Type Description List<object> | Improve this Doc View Source tempNextDrawer Declaration public FutureFieldAttribute tempNextDrawer Field Value Type Description FutureFieldAttribute Properties | Improve this Doc View Source ArrayInteractionMode [WIP TEST] : Défini comment cet attribut se comporte quand il est disposé sur un array Declaration public virtual FutureFieldAttribute.AttributeArrayInteraction ArrayInteractionMode { get; } Property Value Type Description FutureFieldAttribute.AttributeArrayInteraction Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.root.html": {
    "href": "api/logiked.source.attributes.root.html",
    "title": "Namespace logiked.source.attributes.root | Example Unity documentation",
    "keywords": "Namespace logiked.source.attributes.root Classes FutureFieldAttribute Attribut gérénique permettant de simplifier l'implémentation de plusieurs Drawers sur un meme champ. Peut etre override sur vos custom drawers FutureFieldAttribute.AttributeContext Enums FutureFieldAttribute.AttributeArrayInteraction [WIP TEST] :Défini comment cet attribut se comporte quand il est disposé sur un array"
  },
  "api/logiked.source.attributes.ShowIfAttribute.ComputeMode.html": {
    "href": "api/logiked.source.attributes.ShowIfAttribute.ComputeMode.html",
    "title": "Enum ShowIfAttribute.ComputeMode | Example Unity documentation",
    "keywords": "Enum ShowIfAttribute.ComputeMode Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public enum ShowIfAttribute.ComputeMode Fields Name Description AND OR Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.ShowIfAttribute.html": {
    "href": "api/logiked.source.attributes.ShowIfAttribute.html",
    "title": "Class ShowIfAttribute | Example Unity documentation",
    "keywords": "Class ShowIfAttribute Attribut qui affiche(ou non) les champs sur lequel il est disposé. Todo : faire un Contexte parent pour que les attributs qui utilisent du SAME ou NOTSAME fonctionne avec des classes imbriqués Inheritance object Attribute PropertyAttribute FutureFieldAttribute ShowIfAttribute ShowIfSameAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class ShowIfAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source ShowIfAttribute() Declaration public ShowIfAttribute() | Improve this Doc View Source ShowIfAttribute(ComputeMode, string, ShowIfOperations, object) Relance une comparaison pour l'affichage en copiant le dernier rérulstat + un OR ou AND un autre résultat. Declaration public ShowIfAttribute(ShowIfAttribute.ComputeMode mode, string secondaryFieldName, ShowIfOperations secondaryOperation, object secondaryResult) Parameters Type Name Description ShowIfAttribute.ComputeMode mode Le mode de répétition : Même affichage / affichage inverse(else) string secondaryFieldName ShowIfOperations secondaryOperation object secondaryResult | Improve this Doc View Source ShowIfAttribute(ShowIfRepeatMode) Relance une comparaison pour l'affichage en copiant le dernier attribut ShowIfAttribute utilisé Declaration public ShowIfAttribute(ShowIfRepeatMode mode) Parameters Type Name Description ShowIfRepeatMode mode Le mode de répétition : Même affichage / affichage inverse(else) | Improve this Doc View Source ShowIfAttribute(string, ShowIfOperations, object) Declaration public ShowIfAttribute(string fieldName, ShowIfOperations operation, object result) Parameters Type Name Description string fieldName Le nom du champ/propriété qui sert à la comparaison, depuis l'objet conteneur du champ. ShowIfOperations operation Type d'opération de comparaison à appliquer object result Résultat attendu | Improve this Doc View Source ShowIfAttribute(string, string, object) Declaration public ShowIfAttribute(string fieldName, string operation, object result) Parameters Type Name Description string fieldName string operation object result Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.ShowIfAttribute.ShowCalculation.html": {
    "href": "api/logiked.source.attributes.ShowIfAttribute.ShowCalculation.html",
    "title": "Class ShowIfAttribute.ShowCalculation | Example Unity documentation",
    "keywords": "Class ShowIfAttribute.ShowCalculation Représentation d'un calcul pour l'attribut ShowIf Inheritance object ShowIfAttribute.ShowCalculation Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [Serializable] public class ShowIfAttribute.ShowCalculation Constructors | Improve this Doc View Source ShowCalculation(string, ShowIfOperations, object) Declaration public ShowCalculation(string fieldName, ShowIfOperations operation, object exceptedResult) Parameters Type Name Description string fieldName ShowIfOperations operation object exceptedResult Methods | Improve this Doc View Source Evaluate(object) Declaration public bool Evaluate(object obj) Parameters Type Name Description object obj Returns Type Description bool Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.ShowIfOperations.html": {
    "href": "api/logiked.source.attributes.ShowIfOperations.html",
    "title": "Enum ShowIfOperations | Example Unity documentation",
    "keywords": "Enum ShowIfOperations Les différents type de comparaisons pour l'attribut ShowIfAttribute Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public enum ShowIfOperations Fields Name Description Equal Greater Lesser NotEqual Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.ShowIfRepeatMode.html": {
    "href": "api/logiked.source.attributes.ShowIfRepeatMode.html",
    "title": "Enum ShowIfRepeatMode | Example Unity documentation",
    "keywords": "Enum ShowIfRepeatMode Parametre de répetitions pour l'attribut ShowIfAttribute. Mettez ShowIfRepeatMode.Same dans le constructeur de l'attribut pour qu'il execute la même comparaison que le précédent attribut. Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public enum ShowIfRepeatMode Fields Name Description NotSame Same Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.ShowIfSameAttribute.html": {
    "href": "api/logiked.source.attributes.ShowIfSameAttribute.html",
    "title": "Class ShowIfSameAttribute | Example Unity documentation",
    "keywords": "Class ShowIfSameAttribute Attribut qui répète le comportement du dernier ShowIF utilisé. Racourci du constructeur ShowIfAttribute avec le paramètre Same. Todo : faire un Contexte parent pour que les attributs qui utilisent du SAME ou NOTSAME fonctionne avec des classes imbriqués. Inheritance object Attribute PropertyAttribute FutureFieldAttribute ShowIfAttribute ShowIfSameAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = true)] public class ShowIfSameAttribute : ShowIfAttribute Constructors | Improve this Doc View Source ShowIfSameAttribute() Declaration public ShowIfSameAttribute() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.attributes.SortingLayerAttribute.html": {
    "href": "api/logiked.source.attributes.SortingLayerAttribute.html",
    "title": "Class SortingLayerAttribute | Example Unity documentation",
    "keywords": "Class SortingLayerAttribute Dessine un entier en mode Sorting layer Inheritance object Attribute PropertyAttribute FutureFieldAttribute SortingLayerAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.attributes Assembly: Logiked_Source.dll Syntax public class SortingLayerAttribute : FutureFieldAttribute Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.database.DatabaseAbstractElement.html": {
    "href": "api/logiked.source.database.DatabaseAbstractElement.html",
    "title": "Class DatabaseAbstractElement | Example Unity documentation",
    "keywords": "Class DatabaseAbstractElement Type de base pour un élément de la BDD. LogikedDatabase<A, D, C> Override ce type pour pouvoir creer des base de données personnalisés Inheritance object Object ScriptableObject DatabaseAbstractElement Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax public abstract class DatabaseAbstractElement : ScriptableObject Fields | Improve this Doc View Source categoryId Declaration [SerializeField] [Tooltip(\"La catégorie de cet élement dans la base de données.\")] [FieldSize(0.5, true)] protected int categoryId Field Value Type Description int | Improve this Doc View Source tags Declaration [FieldSectionBegin(\"Base datas\", false)] [FieldSize(0.5, true)] [SerializeField] [Tooltip(\"Les tags associés à cet objet par rapport à sa Bdd (Stockés sur les bits de l'entier, en binaire)\")] protected int tags Field Value Type Description int Properties | Improve this Doc View Source CategoryId Declaration public virtual int CategoryId { get; } Property Value Type Description int | Improve this Doc View Source Database La base de donnée associé a cet élement Declaration public LogikedDatabase Database { get; set; } Property Value Type Description LogikedDatabase | Improve this Doc View Source ItemName Nom de l'élément. Virtual pour pouvoir changer son nom en Lstring Declaration public abstract string ItemName { get; } Property Value Type Description string | Improve this Doc View Source ItemTags Declaration public virtual int ItemTags { get; } Property Value Type Description int | Improve this Doc View Source Sprite Le sprite associé a cet élement Declaration public Sprite Sprite { get; } Property Value Type Description Sprite Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.source.database.DatabaseCanMaskField.html": {
    "href": "api/logiked.source.database.DatabaseCanMaskField.html",
    "title": "Class DatabaseCanMaskField | Example Unity documentation",
    "keywords": "Class DatabaseCanMaskField [WIP] A mettre sur les champs des elements d'une BDD. Permet de les masquer si l'option \"MaskField\" de la catégorie est activée Inheritance object Attribute PropertyAttribute FutureFieldAttribute DatabaseCanMaskField Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field)] public class DatabaseCanMaskField : FutureFieldAttribute Constructors | Improve this Doc View Source DatabaseCanMaskField() Declaration public DatabaseCanMaskField() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.database.DatabaseCategory.html": {
    "href": "api/logiked.source.database.DatabaseCategory.html",
    "title": "Class DatabaseCategory | Example Unity documentation",
    "keywords": "Class DatabaseCategory Une catégorie de rangement pour des objets de la base de données Inheritance object DatabaseCategory Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax [Serializable] public class DatabaseCategory Properties | Improve this Doc View Source CategoryName Declaration [SerializeField] public string CategoryName { get; } Property Value Type Description string Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.database.DatabaseCategoryNumberAttribue.html": {
    "href": "api/logiked.source.database.DatabaseCategoryNumberAttribue.html",
    "title": "Class DatabaseCategoryNumberAttribue | Example Unity documentation",
    "keywords": "Class DatabaseCategoryNumberAttribue Layer pour pouvoir gerer un champ categorie sur les objets de la bdd Inheritance object Attribute PropertyAttribute FutureFieldAttribute DatabaseCategoryNumberAttribue Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax public class DatabaseCategoryNumberAttribue : FutureFieldAttribute Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.database.DatabaseTagNumberAttribute.html": {
    "href": "api/logiked.source.database.DatabaseTagNumberAttribute.html",
    "title": "Class DatabaseTagNumberAttribute | Example Unity documentation",
    "keywords": "Class DatabaseTagNumberAttribute Layer pour pouvoir gerer des tags des elements de la database Inheritance object Attribute PropertyAttribute FutureFieldAttribute DatabaseTagNumberAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class DatabaseTagNumberAttribute : FutureFieldAttribute Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.database.html": {
    "href": "api/logiked.source.database.html",
    "title": "Namespace logiked.source.database | Example Unity documentation",
    "keywords": "Namespace logiked.source.database Classes DatabaseAbstractElement Type de base pour un élément de la BDD. LogikedDatabase<A, D, C> Override ce type pour pouvoir creer des base de données personnalisés DatabaseCanMaskField [WIP] A mettre sur les champs des elements d'une BDD. Permet de les masquer si l'option \"MaskField\" de la catégorie est activée DatabaseCategory Une catégorie de rangement pour des objets de la base de données DatabaseCategoryNumberAttribue Layer pour pouvoir gerer un champ categorie sur les objets de la bdd DatabaseTagNumberAttribute Layer pour pouvoir gerer des tags des elements de la database LogikedDatabase Type racine d'une base de données d'éléments du jeu. (Des objets, des mobs, des personnages...) Stoque et organise les élements. Encadre leur, leur manipulation et leur accés LogikedDatabase<A, D, C> Base de données d'éléments du jeu. (Des objets, des mobs, des personnages...) Stoque et organise les élements. Encadre leur creation, leur manipulation et leur accés Le type de base des élements est DatabaseAbstractElement"
  },
  "api/logiked.source.database.LogikedDatabase-3.html": {
    "href": "api/logiked.source.database.LogikedDatabase-3.html",
    "title": "Class LogikedDatabase<A, D, C> | Example Unity documentation",
    "keywords": "Class LogikedDatabase<A, D, C> Base de données d'éléments du jeu. (Des objets, des mobs, des personnages...) Stoque et organise les élements. Encadre leur creation, leur manipulation et leur accés Le type de base des élements est DatabaseAbstractElement Inheritance object Object ScriptableObject LogikedDatabase LogikedDatabase<A, D, C> Inherited Members LogikedDatabase.createFolderForEachElements LogikedDatabase.ItemTags LogikedDatabase.GetCategory(int) Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax public abstract class LogikedDatabase<A, D, C> : LogikedDatabase where A : LogikedDatabase where D : DatabaseAbstractElement where C : DatabaseCategory Type Parameters Name Description A Le type de base de donnée (Mettre le type de la classe actuelle). D Le type des descripteurs des objets de cette BDD. C Le type des catégorie des objets de cette BDD. Par défaut vous pouvez mettre DatabaseCategory. Vous pouvez créer vos propres catégories à partir de cette classe. Fields | Improve this Doc View Source databaseElementsLabel Label ajouté a tout les Assets crées dans la base de donnée Declaration [SerializeField] [Tooltip(\"Label ajouté a tout les Assets crées dans la base de donnée\")] protected string databaseElementsLabel Field Value Type Description string | Improve this Doc View Source instance [WIP] l'instance cette Bdd (dans le cadre ou c'est un singleton) Declaration protected static A instance Field Value Type Description A | Improve this Doc View Source isSingletonDatabase [WIP] Cette Database est la seule de son type ? Dans ce cas on peut y acceder par DatabaseType.Instance Declaration [SerializeField] [Tooltip(\"[WIP] Cette Database est la seule de son type ? Dans ce cas on peut y acceder par DatabaseType.Instance\")] protected bool isSingletonDatabase Field Value Type Description bool | Improve this Doc View Source itemList La liste de tout les items contenu dans la BDD Declaration [SerializeField] protected List<D> itemList Field Value Type Description List<D> Properties | Improve this Doc View Source Categories Liste de toute les catégories d'items disponibles Declaration [SerializeField] protected override DatabaseCategory[] Categories { get; } Property Value Type Description DatabaseCategory[] Overrides LogikedDatabase.Categories | Improve this Doc View Source Instance [WIP] l'instance cette Bdd (dans le cadre ou c'est un singleton) Declaration public static A Instance { get; } Property Value Type Description A | Improve this Doc View Source ItemList La liste de tout les items contenu dans la base Declaration public D[] ItemList { get; } Property Value Type Description D[] | Improve this Doc View Source ItemListBase La liste de tout les items contenu dans la base, avec le type DatabaseAbstractElement Declaration public override DatabaseAbstractElement[] ItemListBase { get; } Property Value Type Description DatabaseAbstractElement[] Overrides LogikedDatabase.ItemListBase Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.source.database.LogikedDatabase.html": {
    "href": "api/logiked.source.database.LogikedDatabase.html",
    "title": "Class LogikedDatabase | Example Unity documentation",
    "keywords": "Class LogikedDatabase Type racine d'une base de données d'éléments du jeu. (Des objets, des mobs, des personnages...) Stoque et organise les élements. Encadre leur, leur manipulation et leur accés Inheritance object Object ScriptableObject LogikedDatabase LogikedDatabase<A, D, C> Namespace: logiked.source.database Assembly: Logiked_Source.dll Syntax public abstract class LogikedDatabase : ScriptableObject Fields | Improve this Doc View Source createFolderForEachElements Faut-il créer un dossier pour chaque nouvel élement de la Bdd ? Utile pour l'organisation des types complexes et de leurs fichiers. Declaration [SerializeField] [Tooltip(\"Faut-il créer un dossier pour chaque nouvel élement de la Bdd ? Utile pour l'organisation des types complexes et de leurs fichiers.\")] protected bool createFolderForEachElements Field Value Type Description bool Properties | Improve this Doc View Source Categories Liste de toute les catégories d'items disponibles Declaration [SerializeField] protected abstract DatabaseCategory[] Categories { get; } Property Value Type Description DatabaseCategory[] | Improve this Doc View Source ItemListBase La liste de tout les items contenu dans la base Declaration public abstract DatabaseAbstractElement[] ItemListBase { get; } Property Value Type Description DatabaseAbstractElement[] | Improve this Doc View Source ItemTags La liste de tout les tags d'items disponibles Declaration public string[] ItemTags { get; } Property Value Type Description string[] Methods | Improve this Doc View Source GetCategory(int) Obtenir une Catégorie depuis un ID Declaration public DatabaseCategory GetCategory(int id) Parameters Type Name Description int id L'id de la catégorie à trouver Returns Type Description DatabaseCategory Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.source.extentions.DebugC.ErrorLevel.html": {
    "href": "api/logiked.source.extentions.DebugC.ErrorLevel.html",
    "title": "Enum DebugC.ErrorLevel | Example Unity documentation",
    "keywords": "Enum DebugC.ErrorLevel Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public enum DebugC.ErrorLevel Fields Name Description Error Log Warning Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.extentions.DebugC.html": {
    "href": "api/logiked.source.extentions.DebugC.html",
    "title": "Class DebugC | Example Unity documentation",
    "keywords": "Class DebugC Extensions pour faire de joli logs Inheritance object DebugC Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class DebugC Methods | Improve this Doc View Source Log(string, Color, string, string, ErrorLevel, Object) Debug un texte coloré dans la console Declaration public static void Log(string text, Color color, string prefix = null, string suffix = null, DebugC.ErrorLevel errorLevel = ErrorLevel.Log, Object context = null) Parameters Type Name Description string text Le message à afficher Color color La couleur du message string prefix Nom à afficher avant le message. Est affiché entre crochet : [prefix] string suffix Texte affiché à la fin du message, sur une nouvelle ligne DebugC.ErrorLevel errorLevel Niveau d'erreur du message (log, warning, error) : DebugC.ErrorLevel Object context Objet que le message concerne | Improve this Doc View Source Log(string, Color, string, string, int, Object) Debug un texte coloré dans la console Declaration public static void Log(string text, Color color, string prefix = null, string suffix = null, int errorLevel = 0, Object context = null) Parameters Type Name Description string text Le message à afficher Color color La couleur du message string prefix Nom à afficher avant le message. Est affiché entre crochet : [prefix] string suffix Texte affiché à la fin du message, sur une nouvelle ligne int errorLevel Niveau d'erreur du message (log, warning, error) : DebugC.ErrorLevel Object context Objet que le message concerne | Improve this Doc View Source LogError(string, Color, string, string, Object) Debug un texte coloré d'erreur dans la console Declaration public static void LogError(string text, Color color, string prefix = null, string suffix = null, Object context = null) Parameters Type Name Description string text Le message à afficher Color color La couleur du message string prefix Nom à afficher avant le message. Est affiché entre crochet : [prefix] string suffix Texte affiché à la fin du message, sur une nouvelle ligne Object context Objet que le message concerne | Improve this Doc View Source LogWarning(string, Color, string, string, Object) Debug un texte coloré de warning dans la console Declaration public static void LogWarning(string text, Color color, string prefix = null, string suffix = null, Object context = null) Parameters Type Name Description string text Le message à afficher Color color La couleur du message string prefix Nom à afficher avant le message. Est affiché entre crochet : [prefix] string suffix Texte affiché à la fin du message, sur une nouvelle ligne Object context Objet que le message concerne"
  },
  "api/logiked.source.extentions.GenericsExtentions.ConvertIntMode.html": {
    "href": "api/logiked.source.extentions.GenericsExtentions.ConvertIntMode.html",
    "title": "Enum GenericsExtentions.ConvertIntMode | Example Unity documentation",
    "keywords": "Enum GenericsExtentions.ConvertIntMode Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public enum GenericsExtentions.ConvertIntMode Fields Name Description Ceil Floor Round Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.extentions.GenericsExtentions.html": {
    "href": "api/logiked.source.extentions.GenericsExtentions.html",
    "title": "Class GenericsExtentions | Example Unity documentation",
    "keywords": "Class GenericsExtentions Extentions pour les types couramment utilisées Inheritance object GenericsExtentions Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class GenericsExtentions Methods | Improve this Doc View Source Abs(int) Retourne la valeur absolue Declaration public static int Abs(this int source) Parameters Type Name Description int source Le nombre à traiter Returns Type Description int Sa valeur absolue | Improve this Doc View Source Abs(float) Retourne la valeur absolue Declaration public static float Abs(this float source) Parameters Type Name Description float source Le nombre à traiter Returns Type Description float Sa valeur absolue | Improve this Doc View Source AddOrUpdate<T, G>(Dictionary<T, G>, T, G) Ajouter ou update une valeur dans le dictionnaire Declaration public static void AddOrUpdate<T, G>(this Dictionary<T, G> dic, T key, G elem) Parameters Type Name Description Dictionary<T, G> dic Ce dicitonnaire T key La clé à chercher G elem La valeur à ajouter / Mettre à jour Type Parameters Name Description T Le type de clé du dictionnaire G Le type de valeur du dictionnaire | Improve this Doc View Source Ceil(float) Retourne le plus grand entier superieur ou égal à ce float Declaration public static int Ceil(this float source) Parameters Type Name Description float source Le float Returns Type Description int Le Ceil du float | Improve this Doc View Source Clamp(int, int, int) Rogner la valeur entre 2 bornes Declaration public static int Clamp(this int source, int min, int max) Parameters Type Name Description int source La valeur à traiter int min Valeur min du nombre int max Valeur max du nombre [inclus] Returns Type Description int Le nombre clamp | Improve this Doc View Source Clamp(int, int) Rogner la valeur entre 0 et max Declaration public static int Clamp(this int source, int max) Parameters Type Name Description int source La valeur à traiter int max Valeur max du nombre [inclus] Returns Type Description int Le nombre clamp | Improve this Doc View Source Clamp(float, float, float) Rogner la valeur entre 2 bornes Declaration public static float Clamp(this float source, float min, float max) Parameters Type Name Description float source La valeur à traiter float min Valeur min du nombre float max Valeur max du nombre Returns Type Description float Le nombre clamp | Improve this Doc View Source Clamp(float, float) Rogner la valeur entre 0 et max Declaration public static float Clamp(this float source, float max) Parameters Type Name Description float source La valeur à traiter float max Valeur max du nombre Returns Type Description float Le nombre clamp | Improve this Doc View Source Clamp01(float) Rogner la valeur entre 0 et 1 Declaration public static float Clamp01(this float source) Parameters Type Name Description float source La valeur à traiter Returns Type Description float Le nombre clamp entre 0 et 1 | Improve this Doc View Source Cycle(int, int, int) Permet de faire cycler la valeur autour dans l'interval [min-max[ Declaration public static int Cycle(this int source, int min, int max) Parameters Type Name Description int source Le nombre à traiter int min int max La borne max du cycle Returns Type Description int Le nombre transformé, compris entre [0-max[ | Improve this Doc View Source Cycle(int, int) Permet de faire cycler la valeur autour dans l'interval [0-max[, mêmme si elle est négative (contrairement à un simple opérateur %) Declaration public static int Cycle(this int source, int max) Parameters Type Name Description int source Le nombre à traiter int max La borne max du cycle Returns Type Description int Le nombre transformé, compris entre [0-max[ | Improve this Doc View Source Cycle(float, int) Permet de faire cycler la valeur autour dans l'interval [0-max[, mêmme si elle est négative (contrairement à un simple opérateur %) Declaration public static float Cycle(this float source, int max) Parameters Type Name Description float source Le nombre à traiter int max La borne max du cycle Returns Type Description float Le nombre transformé, compris entre [0-max[ | Improve this Doc View Source Cycle(float, float) [Attention:Retourne un résultat à 10^-3 prés] Permet de faire cycler la valeur autour dans l'interval [0-max[, mêmme si elle est négative (contrairement à un simple opérateur %) Declaration public static float Cycle(this float source, float max) Parameters Type Name Description float source Le nombre à traiter float max La borne max du cycle Returns Type Description float Le nombre transformé, compris entre [0-max[ | Improve this Doc View Source Distinct<A, B>(IList<A>, Func<A, B>) Similaire à la fonction Distinct de linq, mais applicable sur un champ via un Predicate particulier Declaration public static List<A> Distinct<A, B>(this IList<A> collection, Func<A, B> selector) Parameters Type Name Description IList<A> collection La liste à traîter Func<A, B> selector Returns Type Description List<A> La nouvelle liste Type Parameters Name Description A Type d'élements de la liste B | Improve this Doc View Source Divide(Vector2, float, float) Divise les composantes des deux vecteur Declaration public static Vector2 Divide(this Vector2 v1, float x, float y) Parameters Type Name Description Vector2 v1 Le vecteur dividende float x float y Returns Type Description Vector2 Le quotien de l'opération | Improve this Doc View Source Divide(Vector2, Vector2) Divise les composantes des deux vecteur Declaration public static Vector2 Divide(this Vector2 v1, Vector2 v2) Parameters Type Name Description Vector2 v1 Le vecteur dividende Vector2 v2 Le vecteur diviseur Returns Type Description Vector2 Le quotien de l'opération | Improve this Doc View Source Divide(Vector3, Vector3) Divise les composantes des deux vecteur Declaration public static Vector3 Divide(this Vector3 v1, Vector3 v2) Parameters Type Name Description Vector3 v1 Le vecteur dividende Vector3 v2 Le vecteur diviseur Returns Type Description Vector3 Le quotien de l'opération | Improve this Doc View Source Floor(float) Retourne le plus grand entier inferieur ou égal à ce float Declaration public static int Floor(this float source) Parameters Type Name Description float source Le float Returns Type Description int Le Floor du float | Improve this Doc View Source FlooredDivide(int, int) Divise le nombre et arrondi à l'inferieur (pas pareil que int A/ int B) Declaration public static int FlooredDivide(this int source, int divideBy) Parameters Type Name Description int source Le nombre à traiter int divideBy Le diviseur Returns Type Description int Le nombre divisé et Floored | Improve this Doc View Source ForEach<T>(IEnumerable<T>, Action<T>) Applique une fonction à chaque éléments d'une liste Declaration public static void ForEach<T>(this IEnumerable<T> source, Action<T> action) Parameters Type Name Description IEnumerable<T> source La collection Action<T> action La fonction à appliquer Type Parameters Name Description T Le type des élements de la collection | Improve this Doc View Source Format(string, params object[]) Racourcis pour la fonction static \"Format\" de strings. Pratique pour faire des comparaisons, sinon préferer l'implémentation native C# : $\"aaa {variable} bbb\" quand c'est possible Declaration public static string Format(this string str, params object[] strs) Parameters Type Name Description string str La chaîne a formater object[] strs Les élement à integrer Returns Type Description string La nouvelle chaîne avec les élements | Improve this Doc View Source GetCyclic<T>(ICollection<T>, int) Obtenir la valeur de l'array à la position Id, mais avec un cycle sur la taille de l'array. Ainsi, Array.GetCyclic(-1) donnera le dernier élement; Declaration public static T GetCyclic<T>(this ICollection<T> item, int id) Parameters Type Name Description ICollection<T> item L'array à traiter int id La valeur de l'index (valeur négative autorisés) Returns Type Description T L'élement à la position Id.Cylce(Item.Length) Type Parameters Name Description T Le type des élements de l'array | Improve this Doc View Source GetOrDefault<T, G>(IDictionary<T, G>, T, G) Retourne une valeur du dictionnaire en fonction d'une clé. Si cette valeur n'est pas présente, retourne la valeur par défaut du type G. Declaration public static G GetOrDefault<T, G>(this IDictionary<T, G> dic, T key, G defaultValue) Parameters Type Name Description IDictionary<T, G> dic Ce dictionnaire T key La clé associé à la valeur G defaultValue La valeur par défaut spécifiée Returns Type Description G la valeur ou la valeur par défaut de G (peut etre null) Type Parameters Name Description T Le type des clés contenues dans le dictionnaire G Le type des valeurs contenues dans le dictionnaire | Improve this Doc View Source GetOrDefault<T, G>(IDictionary<T, G>, T) Retourne une valeur du dictionnaire en fonction d'une clé. Si cette valeur n'est pas présente, retourne la valeur par défaut du type G. Declaration public static G GetOrDefault<T, G>(this IDictionary<T, G> dic, T key) Parameters Type Name Description IDictionary<T, G> dic Ce dictionnaire T key La clé associé à la valeur Returns Type Description G la valeur ou la valeur par défaut de G (peut etre null) Type Parameters Name Description T Le type des clés contenues dans le dictionnaire G Le type des valeurs contenues dans le dictionnaire | Improve this Doc View Source GetValueOrDefault<A, B>(IDictionary<A, B>, A) Declaration public static B GetValueOrDefault<A, B>(this IDictionary<A, B> collection, A value) Parameters Type Name Description IDictionary<A, B> collection A value Returns Type Description B Type Parameters Name Description A B | Improve this Doc View Source IsNullOrEmpty(string) Racourcis pour la fonction \"isNullOrEmpty\" de strings Declaration public static bool IsNullOrEmpty(this string str) Parameters Type Name Description string str La chaîne à comparer Returns Type Description bool La chaîne est-elle nulle ou vide ? | Improve this Doc View Source IsNullOrWhiteSpace(string) Racourcis pour la fonction \"isNullOrWhiteSpace\" de strings Declaration public static bool IsNullOrWhiteSpace(this string str) Parameters Type Name Description string str La chaîne à comparer Returns Type Description bool La chaîne est-elle nulle ou avec des spaces ? | Improve this Doc View Source LookAtRotation(Transform, Vector3, Vector3) La fonction Unity LookAt étant fortement déficiente, cette extension à pour but de retourner une rotation entre deux objets afin que l'un regarde l'autre selon un axe. Se sert du forward de l'objet comme point de départ de la rotation! Fonctionne surtout pour l'axe Y à ce jour Declaration public static Quaternion LookAtRotation(this Transform trf, Vector3 lookatPoint, Vector3 constraintAxis) Parameters Type Name Description Transform trf Le transform de base qui doit tourner Vector3 lookatPoint L'objet à regarder Vector3 constraintAxis L'axe de contraine. Vector3.up pour des déplacements au sol, c'est bien. Returns Type Description Quaternion Le Quaternion de rotation. | Improve this Doc View Source Multiply(Vector2, float, float) Multiplie les composantes des deux vecteur Declaration public static Vector2 Multiply(this Vector2 v1, float x, float y) Parameters Type Name Description Vector2 v1 Ce vecteur float x float y Returns Type Description Vector2 La multiplication des deux vecteurs | Improve this Doc View Source Multiply(Vector2, Vector2) Multiplie les composantes des deux vecteur Declaration public static Vector2 Multiply(this Vector2 v1, Vector2 v2) Parameters Type Name Description Vector2 v1 Ce vecteur Vector2 v2 Le vecteur à multiplier Returns Type Description Vector2 La multiplication des deux vecteurs | Improve this Doc View Source Multiply(Vector3, float, float, float) Multiplie les composantes des deux vecteur Declaration public static Vector3 Multiply(this Vector3 v1, float x, float y, float z) Parameters Type Name Description Vector3 v1 Ce vecteur float x Composante multiplicative float y Composante multiplicative float z Composante multiplicative Returns Type Description Vector3 La multiplication des deux vecteurs | Improve this Doc View Source Multiply(Vector3, Vector3) Multiplie les composantes des deux vecteur Declaration public static Vector3 Multiply(this Vector3 v1, Vector3 v2) Parameters Type Name Description Vector3 v1 Ce vecteur Vector3 v2 Le vecteur à multiplier Returns Type Description Vector3 La multiplication des deux vecteurs | Improve this Doc View Source NextFloat(Random, float, float) Retourne un Float random entre les deux bornes Declaration public static float NextFloat(this Random source, float min, float max) Parameters Type Name Description Random source Le générateur de random float min Valeur minimale float max Valeur maximale Returns Type Description float Valeur aléatoire entre les deux bornes | Improve this Doc View Source NextLong(Random, long, long) Retourne un Long random entre les deux bornes Declaration public static long NextLong(this Random source, long min = -9223372036854775808, long max = 9223372036854775807) Parameters Type Name Description Random source Le générateur de random long min Valeur minimale long max Valeur maximale Returns Type Description long Valeur aléatoire entre les deux bornes | Improve this Doc View Source Range(Random, float, float) Retourne un Float random entre les deux bornes Declaration public static float Range(this Random source, float min, float max) Parameters Type Name Description Random source Le générateur de random float min Valeur minimale float max Valeur maximale Returns Type Description float Valeur aléatoire entre les deux bornes | Improve this Doc View Source Remap(float, float, float, float, float) Modifie la plage de la valeur Declaration public static float Remap(this float value, float range1Min, float range1Max, float range2Min, float range2Max) Parameters Type Name Description float value La valeur à modifier, dans l'intervalle 1 float range1Min Le minimum de l'intervalle dans lequel la valeur est utilisé float range1Max Le maximum de l'intervalle dans lequel la valeur est utilisé float range2Min Le nouveau minimum de l'intervalle dans lequel la valeur sera utilisé float range2Max Le nouveau minimum de l'intervalle dans lequel la valeur sera utilisé Returns Type Description float La valeur modifié, mappé pour l'intervalle 2 | Improve this Doc View Source Rnd(float, int, int) Retourne le multiple de range le plus proche de ce float (Arrondi à range prés) Declaration public static int Rnd(this float source, int step, int offset = 0) Parameters Type Name Description float source Le nombre à transformer int step Le multiple sur lequel l'arrondi doit s'aligner int offset Une valeur ajoutée à la source, puis soustraire à la fin du calcul. Returns Type Description int La valeur transformée | Improve this Doc View Source Rnd(float, float, float) Retourne le multiple de range le plus proche de ce float (Arrondi à range prés) Declaration public static float Rnd(this float source, float step, float offset = 0) Parameters Type Name Description float source Le nombre à transformer float step Le multiple sur lequel l'arrondi doit s'aligner float offset Une valeur ajoutée à la source, puis soustraire à la fin du calcul. Returns Type Description float La valeur transformée | Improve this Doc View Source Rnd(float) Retourne l'arrondi de ce float Declaration public static int Rnd(this float source) Parameters Type Name Description float source Le float Returns Type Description int Arrondi du float | Improve this Doc View Source Rotate(Vector2, float) Applique une rotation au vecteur selon l'axe orthogonal qu'il décrit Declaration public static Vector2 Rotate(this Vector2 v, float degrees) Parameters Type Name Description Vector2 v float degrees Returns Type Description Vector2 Le quotien de l'opération | Improve this Doc View Source RotateAround(Vector3, Vector3, Vector3) Effectue une rotation de ce vecteur autour d'un point de pivot, selon un angle Declaration public static Vector3 RotateAround(this Vector3 point, Vector3 pivot, Vector3 angles) Parameters Type Name Description Vector3 point Le point à déplacer Vector3 pivot Le point de pivot Vector3 angles L'angle de rotation Returns Type Description Vector3 Le point transformé | Improve this Doc View Source RotateAround(Vector3, Vector3) Effectue une rotation de ce vecteur autour du point (0,0,0), selon un angle Declaration public static Vector3 RotateAround(this Vector3 point, Vector3 angles) Parameters Type Name Description Vector3 point Le point à déplacer Vector3 angles L'angle de rotation Returns Type Description Vector3 Le point transformé | Improve this Doc View Source RotateAround(Vector3Int, Vector3, Vector3) Effectue une rotation de ce vecteur autour d'un point de pivot, selon un angle, et le retourne en Vector3Int Declaration public static Vector3Int RotateAround(this Vector3Int point, Vector3 pivot, Vector3 angles) Parameters Type Name Description Vector3Int point Le point à déplacer Vector3 pivot Le point de pivot Vector3 angles L'angle de rotation Returns Type Description Vector3Int Le point transformé | Improve this Doc View Source RotateAround(Vector3Int, Vector3) Effectue une rotation de ce vecteur autour du point (0,0,0), selon un angle, et le retourne en Vector3Int Declaration public static Vector3Int RotateAround(this Vector3Int point, Vector3 angles) Parameters Type Name Description Vector3Int point Le point à déplacer Vector3 angles L'angle de rotation Returns Type Description Vector3Int Le point transformé | Improve this Doc View Source Sign(int, bool) Rertourne le signe du nombre (-1 ou 1) Declaration public static int Sign(this int source, bool allowZero = false) Parameters Type Name Description int source Le nombre à traiter bool allowZero Possibilité de retourner 0 si ce float est nul Returns Type Description int Le signe du nombre | Improve this Doc View Source Sign(float, bool) Rertourne le signe du nombre (-1 ou 1) Declaration public static int Sign(this float source, bool allowZero = false) Parameters Type Name Description float source Le nombre à traiter bool allowZero Possibilité de retourner 0 si ce float est nul Returns Type Description int Le signe du nombre | Improve this Doc View Source Swap<T>(IList<T>, int, int) Echange la position de 2 objets dans une liste Declaration public static void Swap<T>(this IList<T> list, int indexA, int indexB) Parameters Type Name Description IList<T> list La liste int indexA L'index du premier élément à intervertir int indexB L'index du second élément à intervertir Type Parameters Name Description T Le type des objets de la liste | Improve this Doc View Source ToVector2(Vector3Int) Conversion de vecteur Declaration public static Vector2 ToVector2(this Vector3Int point) Parameters Type Name Description Vector3Int point Le vecteur à convertir Returns Type Description Vector2 Le vecteur converti | Improve this Doc View Source ToVector2Int(Vector2) Conversion de vecteur Declaration public static Vector2Int ToVector2Int(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector2Int Le vecteur converti | Improve this Doc View Source ToVector2Int(Vector3Int) Conversion de vecteur Declaration public static Vector2Int ToVector2Int(this Vector3Int point) Parameters Type Name Description Vector3Int point Le vecteur à convertir Returns Type Description Vector2Int Le vecteur converti | Improve this Doc View Source ToVector2IntXZ(Vector3Int) Conversion de vecteur Declaration public static Vector2Int ToVector2IntXZ(this Vector3Int point) Parameters Type Name Description Vector3Int point Le vecteur à convertir Returns Type Description Vector2Int Le vecteur converti | Improve this Doc View Source ToVector2XZ(Vector3) Conversion de vecteur Declaration public static Vector2 ToVector2XZ(this Vector3 point) Parameters Type Name Description Vector3 point Le vecteur à convertir Returns Type Description Vector2 Le vecteur converti, avec les composantes X et Z de l'original | Improve this Doc View Source ToVector2YZ(Vector3) Conversion de vecteur Declaration public static Vector2 ToVector2YZ(this Vector3 point) Parameters Type Name Description Vector3 point Le vecteur à convertir Returns Type Description Vector2 Le vecteur converti, avec les composantes Y et Z de l'original | Improve this Doc View Source ToVector3(Vector2) Conversion de vecteur Declaration public static Vector3 ToVector3(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector3 Le vecteur converti | Improve this Doc View Source ToVector3(Vector3Int) Conversion de vecteur Declaration public static Vector3 ToVector3(this Vector3Int point) Parameters Type Name Description Vector3Int point Le vecteur à convertir Returns Type Description Vector3 Le vecteur converti | Improve this Doc View Source ToVector3Int(Vector2) Conversion de vecteur Declaration public static Vector3Int ToVector3Int(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector3Int Le vecteur converti | Improve this Doc View Source ToVector3Int(Vector2Int) Conversion de vecteur Declaration public static Vector3Int ToVector3Int(this Vector2Int point) Parameters Type Name Description Vector2Int point Le vecteur à convertir Returns Type Description Vector3Int Le vecteur converti | Improve this Doc View Source ToVector3Int(Vector3, ConvertIntMode) Conversion de vecteur Declaration public static Vector3Int ToVector3Int(this Vector3 point, GenericsExtentions.ConvertIntMode mode = ConvertIntMode.Round) Parameters Type Name Description Vector3 point Le vecteur à convertir GenericsExtentions.ConvertIntMode mode Le mode de conversion (arrondir, Floor...) Returns Type Description Vector3Int Le vecteur converti | Improve this Doc View Source ToVector3IntCeil(Vector2) Conversion de vecteur Declaration public static Vector3Int ToVector3IntCeil(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector3Int Le vecteur converti | Improve this Doc View Source ToVector3IntFloor(Vector2) Conversion de vecteur Declaration public static Vector3Int ToVector3IntFloor(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector3Int Le vecteur converti | Improve this Doc View Source ToVector3XY(Vector2Int) Conversion de vecteur Declaration public static Vector3 ToVector3XY(this Vector2Int point) Parameters Type Name Description Vector2Int point Le vecteur à convertir Returns Type Description Vector3 Le vecteur converti | Improve this Doc View Source ToVector3XZ(Vector2) Conversion de vecteur Declaration public static Vector3 ToVector3XZ(this Vector2 point) Parameters Type Name Description Vector2 point Le vecteur à convertir Returns Type Description Vector3 Le vecteur converti | Improve this Doc View Source ToVector3XZ(Vector2Int) Conversion de vecteur Declaration public static Vector3 ToVector3XZ(this Vector2Int point) Parameters Type Name Description Vector2Int point Le vecteur à convertir Returns Type Description Vector3 Le vecteur converti"
  },
  "api/logiked.source.extentions.html": {
    "href": "api/logiked.source.extentions.html",
    "title": "Namespace logiked.source.extentions | Example Unity documentation",
    "keywords": "Namespace logiked.source.extentions Classes DebugC Extensions pour faire de joli logs GenericsExtentions Extentions pour les types couramment utilisées ObjectsExtension Des extentions pour les Objets de base de Unity. ReflectExtention Extentions pour les classes qui font de la reflection ReflectExtention.ReflectedObject [WIP, peut-être un peu con] [TODO]: utiliser des members au lieu de field/Property etc Conteneur dynamique pour une valeur obtenue par reflection. Peut être issu d'un champ ou d'une propiété. Appeler Value pour récuperer la valeure actuelle du pointeur. RemoveScriptableObjectExtention Extention pour la spression des scriptable objects TimerExtention Extension de la classe Timer Interfaces OnRemoveObjectEvent Event Editeur qui permet de gérer la supression de l'objet (eg: Pour suprimer des fichiers annexes automatiquement par exemple) Appelé par reflection à la supression du Scriptable Object de cette propriété, par l'exention ScriptableObject OnRemoveScriptableObject(ScriptableObject) Enums DebugC.ErrorLevel GenericsExtentions.ConvertIntMode ObjectsExtension.Icon Type d'icone pour les GameObjects, dans la SceneView de l'inspecteur."
  },
  "api/logiked.source.extentions.ObjectsExtension.html": {
    "href": "api/logiked.source.extentions.ObjectsExtension.html",
    "title": "Class ObjectsExtension | Example Unity documentation",
    "keywords": "Class ObjectsExtension Des extentions pour les Objets de base de Unity. Inheritance object ObjectsExtension Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class ObjectsExtension Methods | Improve this Doc View Source AddOrGetComponent<T>(GameObject) Cherche ou ajoute un composant sur le gameObject et le retourne. Declaration public static T AddOrGetComponent<T>(this GameObject gameObject) where T : Component Parameters Type Name Description GameObject gameObject Cet objet Returns Type Description T Le composant Type Parameters Name Description T Le type du composant en question | Improve this Doc View Source AddRangeToArray<T>(T[], params T[]) Ajoute une liste à une autre liste et la retourne Declaration public static T[] AddRangeToArray<T>(this T[] target, params T[] items) Parameters Type Name Description T[] target L'array à remplir T[] items Les élèments à ajouter Returns Type Description T[] Le nouvel array Type Parameters Name Description T Le type de l'array | Improve this Doc View Source CopyComponent<T>(T, GameObject) Copie ce composant sur un autre GameObject Declaration public static T CopyComponent<T>(this T original, GameObject destination) where T : Component Parameters Type Name Description T original Ce composant GameObject destination Returns Type Description T Le composant clonné Type Parameters Name Description T | Improve this Doc View Source DeserializeToObject(byte[]) Convertir cet array d'octets en objet Declaration public static object DeserializeToObject(this byte[] arrBytes) Parameters Type Name Description byte[] arrBytes Le tableau à déserialiser Returns Type Description object L'objet déserialisé | Improve this Doc View Source Inst(GameObject, Transform, Vector3, Quaternion) Créer une instance du GameObject à une position fournie Declaration public static GameObject Inst(this GameObject gb, Transform parent, Vector3 position = default, Quaternion rotation = default) Parameters Type Name Description GameObject gb le gameObject Transform parent Le nouveau parent de l'objet Vector3 position La world position de l'objet Quaternion rotation La world rotation de l'objet Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source Inst(GameObject, Transform, Vector3, Vector3) Créer une instance du GameObject à une position fournie Declaration public static GameObject Inst(this GameObject gb, Transform parent, Vector3 localPosition, Vector3 localRotation) Parameters Type Name Description GameObject gb le gameObject Transform parent Le nouveau parent de l'objet Vector3 localPosition La position locale de l'objet dans le parent Vector3 localRotation La rotation locale de l'objet dans le parent Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source Inst(GameObject, Vector3, Quaternion) Créer une instance du GameObject à une position fournie Declaration public static GameObject Inst(this GameObject gb, Vector3 position, Quaternion rotation = default) Parameters Type Name Description GameObject gb le gameObject Vector3 position La position locale de l'objet Quaternion rotation La rotation locale de l'objet Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source Inst(GameObject, Vector3, Vector3) Créer une instance du GameObject à une position fournie Declaration public static GameObject Inst(this GameObject gb, Vector3 position, Vector3 rotation) Parameters Type Name Description GameObject gb le gameObject Vector3 position La position locale de l'objet Vector3 rotation La rotation locale de l'objet Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source Inst(GameObject, Vector3) Créer une instance du GameObject à une position fournie Declaration public static GameObject Inst(this GameObject gb, Vector3 position) Parameters Type Name Description GameObject gb le gameObject Vector3 position La position locale de l'objet Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source Inst(GameObject) Créer une instance du GameObject à la position de son transform Declaration public static GameObject Inst(this GameObject gb) Parameters Type Name Description GameObject gb le gameObject Returns Type Description GameObject Le gameObject instancié | Improve this Doc View Source SafetyDestroy(ParticleSystem, Transform) Détruit le composant, mais change son parent et le laisse finir son animation. Declaration public static void SafetyDestroy(this ParticleSystem p, Transform newParent = null) Parameters Type Name Description ParticleSystem p Ce composant Transform newParent Le nouveau parent | Improve this Doc View Source SafetyDestroy(TrailRenderer, Transform) Détruit le composant, mais change son parent et le laisse finir son animation. Declaration public static void SafetyDestroy(this TrailRenderer p, Transform newParent = null) Parameters Type Name Description TrailRenderer p Ce composant Transform newParent Le nouveau parent | Improve this Doc View Source SafetyDestroyWithComponents(GameObject, bool) Permet de suprimer le GameObject et en extrait les composants qui ont besoin de finir leur animation, comme les particlesSystem, les trails... Afin de leur laisser finir et de ne pas avoir de coupure nette à l'écran. Declaration public static void SafetyDestroyWithComponents(this GameObject g, bool extractParents = true) Parameters Type Name Description GameObject g Ce GameObject bool extractParents Sortir cet objet de sont parent à la destruction ? | Improve this Doc View Source SerializeToByteArray(object) Convertir cet objet en array de Byte[] Declaration public static byte[] SerializeToByteArray(this object obj) Parameters Type Name Description object obj L'objet à serialiser Returns Type Description byte[] L'objet serialisé | Improve this Doc View Source SetIcon(GameObject, Icon) Applique l'icone au GameObject pour la visualisation dans l'editeur. (Cette fonction n'aura aucun effet dans l'executable) Declaration public static void SetIcon(this GameObject gameObject, ObjectsExtension.Icon icon) Parameters Type Name Description GameObject gameObject L'objet concerné ObjectsExtension.Icon icon L'icone à appliquer | Improve this Doc View Source SetIcon(GameObject, Texture2D) Applique l'icone au GameObject pour la visualisation dans l'editeur. (Cette fonction n'aura aucun effet dans l'executable) Declaration public static void SetIcon(this GameObject gObj, Texture2D icon) Parameters Type Name Description GameObject gObj L'objet concerné Texture2D icon L'icone à appliquer | Improve this Doc View Source SetParticleActive(ParticleSystem, bool) Permet d'activer / désactiver properment un particle system, pour eviter les gros bugs unity, style particle system qui ne se ralume jamais. Declaration public static void SetParticleActive(this ParticleSystem particles, bool state) Parameters Type Name Description ParticleSystem particles bool state"
  },
  "api/logiked.source.extentions.ObjectsExtension.Icon.html": {
    "href": "api/logiked.source.extentions.ObjectsExtension.Icon.html",
    "title": "Enum ObjectsExtension.Icon | Example Unity documentation",
    "keywords": "Enum ObjectsExtension.Icon Type d'icone pour les GameObjects, dans la SceneView de l'inspecteur. Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public enum ObjectsExtension.Icon Fields Name Description CircleBlue CircleGray CircleGreen CircleOrange CirclePurple CircleRed CircleTeal CircleYellow DiamondBlue DiamondGray DiamondGreen DiamondOrange DiamondPurple DiamondRed DiamondTeal DiamondYellow LabelBlue LabelGray LabelGreen LabelOrange LabelPurple LabelRed LabelTeal LabelYellow Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.extentions.OnRemoveObjectEvent.html": {
    "href": "api/logiked.source.extentions.OnRemoveObjectEvent.html",
    "title": "Interface OnRemoveObjectEvent | Example Unity documentation",
    "keywords": "Interface OnRemoveObjectEvent Event Editeur qui permet de gérer la supression de l'objet (eg: Pour suprimer des fichiers annexes automatiquement par exemple) Appelé par reflection à la supression du Scriptable Object de cette propriété, par l'exention ScriptableObject OnRemoveScriptableObject(ScriptableObject) Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public interface OnRemoveObjectEvent Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.extentions.ReflectExtention.html": {
    "href": "api/logiked.source.extentions.ReflectExtention.html",
    "title": "Class ReflectExtention | Example Unity documentation",
    "keywords": "Class ReflectExtention Extentions pour les classes qui font de la reflection Inheritance object ReflectExtention Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class ReflectExtention Methods | Improve this Doc View Source ByName(string) [WIP] Obtenir un type par son nom, (Fullname ou assembly qualified name). Declaration public static Type ByName(string name) Parameters Type Name Description string name Le nom du type à chercher Returns Type Description Type Le type (ou null) | Improve this Doc View Source CastListToArray(IList) Declaration public static Array CastListToArray(this IList list) Parameters Type Name Description IList list Returns Type Description Array | Improve this Doc View Source DebugClassContentReflection(Type) Montre tout les membres (statiques/private ou non) d'une classe dans la console unity. Declaration public static void DebugClassContentReflection(this Type t) Parameters Type Name Description Type t Le type sur lequel est appelé la fonction | Improve this Doc View Source GetFieldValue<T>(object, string) [WIP]Get la valeur d'un champ de l'objet spécifié Declaration public static T GetFieldValue<T>(object obj, string name) Parameters Type Name Description object obj L'objet string name Le nom du champ Returns Type Description T La valeur obtenue (null si rien n'a été trouvé) Type Parameters Name Description T le type | Improve this Doc View Source GetGenericArrayElementType(Type) Declaration public static Type GetGenericArrayElementType(this Type type) Parameters Type Name Description Type type Returns Type Description Type | Improve this Doc View Source GetReflectedValueAtPath(object, string, bool) Retourne par reflection le champ/propiété et sa valeur stockés dans l'objet. Declaration public static ReflectExtention.ReflectedObject GetReflectedValueAtPath(this object obj, string path, bool canBeSingletonClass = true) Parameters Type Name Description object obj L'objet sur lequel est appelé la fonction string path Le chemin relatif vers la valeur depuis l'objet. Exemple : \"gameObject.transform.position\" pour un Obj de type GameObject. bool canBeSingletonClass Autoriser l'acces à un singleton/ autre classe statiques. Returns Type Description ReflectExtention.ReflectedObject Wrapper de la valeur obtenue. (peut etre null) | Improve this Doc View Source GetTypeBySimpleName(string) Obtenir un type par son nom, de manière simplifié (pas le nom de package complet). Ne gère pas plusieurs classes portant le même nom. Declaration public static Type GetTypeBySimpleName(string name) Parameters Type Name Description string name Le nom de la classe à chercher Returns Type Description Type Le type (ou null) | Improve this Doc View Source GetTypePropertyOrField(MemberInfo) Retourne le type du MemberInfo, si c'est un Field ou une Property Declaration public static Type GetTypePropertyOrField(this MemberInfo member) Parameters Type Name Description MemberInfo member Le membre Returns Type Description Type Le type du membre | Improve this Doc View Source GetValuePropertyOrField(MemberInfo, object) Retourne la valeur du MemberInfo, si c'est un Field ou une Property Declaration public static object GetValuePropertyOrField(this MemberInfo member, object instance) Parameters Type Name Description MemberInfo member Le membre object instance L'instance de la classe concernée Returns Type Description object La valeur du membre sur la classe | Improve this Doc View Source Is(Type, Type) Verifie si un type est herité d'un autre. Raccourci pour IsAssignableFrom Declaration public static bool Is(this Type type, Type motherClass) Parameters Type Name Description Type type Le type à verifier Type motherClass La classe mère de ce type Returns Type Description bool Le type herite-t-il de la classe mère ? | Improve this Doc View Source Is<T>(Type) Declaration public static bool Is<T>(this Type type) where T : class Parameters Type Name Description Type type Returns Type Description bool Type Parameters Name Description T | Improve this Doc View Source IsGenericArray(Type) Declaration public static bool IsGenericArray(this Type type) Parameters Type Name Description Type type Returns Type Description bool | Improve this Doc View Source IsTypeOf<T>(object) Declaration public static bool IsTypeOf<T>(this object obj) where T : class Parameters Type Name Description object obj Returns Type Description bool Type Parameters Name Description T | Improve this Doc View Source SetFieldValue<T>(object, string, T) [WIP]Set la valeur d'un champ de l'objet spécifié Declaration public static void SetFieldValue<T>(object obj, string name, T val) Parameters Type Name Description object obj L'objet string name Le nom du champ T val la nouvelle valeur Type Parameters Name Description T le type"
  },
  "api/logiked.source.extentions.ReflectExtention.ReflectedObject.html": {
    "href": "api/logiked.source.extentions.ReflectExtention.ReflectedObject.html",
    "title": "Class ReflectExtention.ReflectedObject | Example Unity documentation",
    "keywords": "Class ReflectExtention.ReflectedObject [WIP, peut-être un peu con] [TODO]: utiliser des members au lieu de field/Property etc Conteneur dynamique pour une valeur obtenue par reflection. Peut être issu d'un champ ou d'une propiété. Appeler Value pour récuperer la valeure actuelle du pointeur. Inheritance object ReflectExtention.ReflectedObject Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public class ReflectExtention.ReflectedObject Properties | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description Type | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description object | Improve this Doc View Source ValueNotFound Declaration public bool ValueNotFound { get; } Property Value Type Description bool Methods | Improve this Doc View Source SetValue(object) Declaration public void SetValue(object value) Parameters Type Name Description object value Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.extentions.RemoveScriptableObjectExtention.html": {
    "href": "api/logiked.source.extentions.RemoveScriptableObjectExtention.html",
    "title": "Class RemoveScriptableObjectExtention | Example Unity documentation",
    "keywords": "Class RemoveScriptableObjectExtention Extention pour la spression des scriptable objects Inheritance object RemoveScriptableObjectExtention Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class RemoveScriptableObjectExtention Methods | Improve this Doc View Source OnRemoveScriptableObject(ScriptableObject) [EDITOR ONLY] Fonction d'extention à appeler sur les ScriptableObject à supprimer Declaration public static void OnRemoveScriptableObject(this ScriptableObject obj) Parameters Type Name Description ScriptableObject obj"
  },
  "api/logiked.source.extentions.TimerExtention.html": {
    "href": "api/logiked.source.extentions.TimerExtention.html",
    "title": "Class TimerExtention | Example Unity documentation",
    "keywords": "Class TimerExtention Extension de la classe Timer Inheritance object TimerExtention Namespace: logiked.source.extentions Assembly: Logiked_Source.dll Syntax public static class TimerExtention Methods | Improve this Doc View Source AutoStop(GameTimer) Permet de stopper un timer (même sur une variable non assignée). Declaration public static void AutoStop(this GameTimer t) Parameters Type Name Description GameTimer t Le timer (peut etre null) | Improve this Doc View Source IsDefinedAndActive(GameTimer) Declaration public static bool IsDefinedAndActive(this GameTimer t) Parameters Type Name Description GameTimer t Returns Type Description bool | Improve this Doc View Source IsNullOrInactive(GameTimer) Permet de checker si un timer est Null ou Inactif (même sur une variable non assignée). Declaration public static bool IsNullOrInactive(this GameTimer t) Parameters Type Name Description GameTimer t Le timer (peut etre null) Returns Type Description bool Le timer est Null ou Inactif"
  },
  "api/logiked.source.gameplay.html": {
    "href": "api/logiked.source.gameplay.html",
    "title": "Namespace logiked.source.gameplay | Example Unity documentation",
    "keywords": "Namespace logiked.source.gameplay Interfaces I_Interactable Interface d'un objet dans la scène avec lequel le joueur peu interagir quand il passe à proximité (objet, item...)"
  },
  "api/logiked.source.gameplay.I_Interactable.html": {
    "href": "api/logiked.source.gameplay.I_Interactable.html",
    "title": "Interface I_Interactable | Example Unity documentation",
    "keywords": "Interface I_Interactable Interface d'un objet dans la scène avec lequel le joueur peu interagir quand il passe à proximité (objet, item...) Namespace: logiked.source.gameplay Assembly: Logiked_Source.dll Syntax public interface I_Interactable Methods | Improve this Doc View Source CanBeInteract() Determines whether this instance [can be interact]. Declaration bool CanBeInteract() Returns Type Description bool | Improve this Doc View Source Interact(int) Interacts with this instance. Declaration bool Interact(int viewId) Parameters Type Name Description int viewId Returns Type Description bool | Improve this Doc View Source OutlineObject(bool) Utile pour faire des effets de couleurs et tout Declaration void OutlineObject(bool state) Parameters Type Name Description bool state Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.GraphicNode-1.html": {
    "href": "api/logiked.source.graphNode.GraphicNode-1.html",
    "title": "Class GraphicNode<T> | Example Unity documentation",
    "keywords": "Class GraphicNode<T> Generic GraphicNode wich handle connexion between nodes. Inheritance object GraphicNode<T> GraphicNode Animation2DNode Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] public abstract class GraphicNode<T> where T : NodeTransition Type Parameters Name Description T Transitions types. Set to NodeTransition for default usage Constructors | Improve this Doc View Source GraphicNode(Vector2, int) Declaration public GraphicNode(Vector2 rectSize, int wrapperId) Parameters Type Name Description Vector2 rectSize int wrapperId | Improve this Doc View Source GraphicNode(Vector2) Declaration public GraphicNode(Vector2 rectSize) Parameters Type Name Description Vector2 rectSize Fields | Improve this Doc View Source text Declaration [SerializeField] public string text Field Value Type Description string | Improve this Doc View Source uniqueNodeId Declaration [GreyedField] [SerializeField] protected int uniqueNodeId Field Value Type Description int Properties | Improve this Doc View Source AllTransitions Declaration public T[] AllTransitions { get; } Property Value Type Description T[] | Improve this Doc View Source TransitionPins Declaration public abstract NodeTransitionPin<T>[] TransitionPins { get; } Property Value Type Description NodeTransitionPin<T>[] | Improve this Doc View Source UniqueNodeId Id Unique du node Declaration public int UniqueNodeId { get; } Property Value Type Description int Methods | Improve this Doc View Source Clone(int) Duplique le node en surface, avec les même membres. Duplique les transitions Declaration public GraphicNode<T> Clone(int newNodeId) Parameters Type Name Description int newNodeId Unique ID du nouveau node généré Returns Type Description GraphicNode<T> Le nouveau node Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.GraphicNode.html": {
    "href": "api/logiked.source.graphNode.GraphicNode.html",
    "title": "Class GraphicNode | Example Unity documentation",
    "keywords": "Class GraphicNode Generic GraphicNode wich handle connexion between nodes. Inheritance object GraphicNode<NodeTransition> GraphicNode Inherited Members GraphicNode<NodeTransition>.AllTransitions GraphicNode<NodeTransition>.Clone(int) GraphicNode<NodeTransition>.uniqueNodeId GraphicNode<NodeTransition>.UniqueNodeId GraphicNode<NodeTransition>.text Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] public class GraphicNode : GraphicNode<NodeTransition> Constructors | Improve this Doc View Source GraphicNode() Declaration public GraphicNode() | Improve this Doc View Source GraphicNode(Vector2, int) Declaration public GraphicNode(Vector2 rectSize, int wrapperId) Parameters Type Name Description Vector2 rectSize int wrapperId | Improve this Doc View Source GraphicNode(Vector2) Declaration public GraphicNode(Vector2 rectSize) Parameters Type Name Description Vector2 rectSize Properties | Improve this Doc View Source TransitionPins Declaration public override sealed NodeTransitionPin<NodeTransition>[] TransitionPins { get; } Property Value Type Description NodeTransitionPin<NodeTransition>[] Overrides GraphicNode<NodeTransition>.TransitionPins | Improve this Doc View Source TransitionPinsProp Declaration public virtual NodeTransitionPin[] TransitionPinsProp { get; } Property Value Type Description NodeTransitionPin[] Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.html": {
    "href": "api/logiked.source.graphNode.html",
    "title": "Namespace logiked.source.graphNode | Example Unity documentation",
    "keywords": "Namespace logiked.source.graphNode Classes GraphicNode Generic GraphicNode wich handle connexion between nodes. GraphicNode<T> Generic GraphicNode wich handle connexion between nodes. NodeTransition Point d'attache d'une transition entre deux nodes NodeTransitionPin Point d'attache de connexion entre deux nodes Utiliser TransitionPinModeAttribute pour spécifier les paramètres du boutton (interdire les connexion mutliples, (wip)pin de destination...) NodeTransitionPin<T> Point d'attache de connexion entre deux nodes Utiliser TransitionPinModeAttribute pour spécifier les paramètres du boutton (interdire les connexion mutliples, (wip)pin de destination...) TransitionPinModeAttribute Modification du comportement des NodeTransitionPin, pour l'editeur visuel. Permet de limiter le nombre de liaisons d'un pin, etc. Interfaces INodeStorage Interface pour récuperer / Set des nodes graphiques dans un scriptable object INodeStorage<N, T> Interface pour récuperer / Set des nodes graphiques dans un scriptable object INodeTransitionPin"
  },
  "api/logiked.source.graphNode.INodeStorage-2.html": {
    "href": "api/logiked.source.graphNode.INodeStorage-2.html",
    "title": "Interface INodeStorage<N, T> | Example Unity documentation",
    "keywords": "Interface INodeStorage<N, T> Interface pour récuperer / Set des nodes graphiques dans un scriptable object Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax public interface INodeStorage<N, T> where N : GraphicNode<T> where T : NodeTransition Type Parameters Name Description N Type de nodes T Type de transitions Properties | Improve this Doc View Source GetNodeArrayPropertyPath Declaration string GetNodeArrayPropertyPath { get; } Property Value Type Description string Methods | Improve this Doc View Source GetNodeById(int) Type des nouveau nodes à instanciés avec Declaration N GetNodeById(int id) Parameters Type Name Description int id Returns Type Description N | Improve this Doc View Source GetNodes() Declaration List<N> GetNodes() Returns Type Description List<N> | Improve this Doc View Source SetNodes(List<N>) Declaration void SetNodes(List<N> newNodes) Parameters Type Name Description List<N> newNodes Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.INodeStorage.html": {
    "href": "api/logiked.source.graphNode.INodeStorage.html",
    "title": "Interface INodeStorage | Example Unity documentation",
    "keywords": "Interface INodeStorage Interface pour récuperer / Set des nodes graphiques dans un scriptable object Inherited Members INodeStorage<GraphicNode, NodeTransition>.GetNodeArrayPropertyPath INodeStorage<GraphicNode, NodeTransition>.GetNodes() INodeStorage<GraphicNode, NodeTransition>.SetNodes(List<GraphicNode>) INodeStorage<GraphicNode, NodeTransition>.GetNodeById(int) Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax public interface INodeStorage : INodeStorage<GraphicNode, NodeTransition> Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.INodeTransitionPin.html": {
    "href": "api/logiked.source.graphNode.INodeTransitionPin.html",
    "title": "Interface INodeTransitionPin | Example Unity documentation",
    "keywords": "Interface INodeTransitionPin Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax public interface INodeTransitionPin Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.NodeTransition.html": {
    "href": "api/logiked.source.graphNode.NodeTransition.html",
    "title": "Class NodeTransition | Example Unity documentation",
    "keywords": "Class NodeTransition Point d'attache d'une transition entre deux nodes Inheritance object NodeTransition Animator2DTransition Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] public class NodeTransition Constructors | Improve this Doc View Source NodeTransition(int) Declaration public NodeTransition(int nextNodeId) Parameters Type Name Description int nextNodeId Properties | Improve this Doc View Source NextNodeId Todo : node type connection Declaration public int NextNodeId { get; } Property Value Type Description int Methods | Improve this Doc View Source Clonetransition() Declaration public NodeTransition Clonetransition() Returns Type Description NodeTransition Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.NodeTransitionPin-1.html": {
    "href": "api/logiked.source.graphNode.NodeTransitionPin-1.html",
    "title": "Class NodeTransitionPin<T> | Example Unity documentation",
    "keywords": "Class NodeTransitionPin<T> Point d'attache de connexion entre deux nodes Utiliser TransitionPinModeAttribute pour spécifier les paramètres du boutton (interdire les connexion mutliples, (wip)pin de destination...) Inheritance object NodeTransitionPin<T> NodeTransitionPin Implements INodeTransitionPin Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] public class NodeTransitionPin<T> : INodeTransitionPin where T : NodeTransition Type Parameters Name Description T Constructors | Improve this Doc View Source NodeTransitionPin() Declaration public NodeTransitionPin() Properties | Improve this Doc View Source AllowMultipleTransitions Declaration public bool AllowMultipleTransitions { get; set; } Property Value Type Description bool | Improve this Doc View Source OverlaySelectionMessage Declaration public string OverlaySelectionMessage { get; set; } Property Value Type Description string | Improve this Doc View Source Transitions Liste des transitions sortantes de ce pin. Utilisation dun array pour controller le nombre d'entrée et ne pas permettre une modification en-place de l'exterieur. Declaration public T[] Transitions { get; set; } Property Value Type Description T[] Methods | Improve this Doc View Source AddTransition(T) Declaration public void AddTransition(T transition) Parameters Type Name Description T transition | Improve this Doc View Source Clone() Declaration public NodeTransitionPin<T> Clone() Returns Type Description NodeTransitionPin<T> | Improve this Doc View Source RemoveAllTransitions() Declaration public void RemoveAllTransitions() | Improve this Doc View Source RemoveTransition(T) Declaration public bool RemoveTransition(T transition) Parameters Type Name Description T transition Returns Type Description bool | Improve this Doc View Source RemoveTransition(int) Declaration public void RemoveTransition(int destinationId) Parameters Type Name Description int destinationId Implements INodeTransitionPin Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.NodeTransitionPin.html": {
    "href": "api/logiked.source.graphNode.NodeTransitionPin.html",
    "title": "Class NodeTransitionPin | Example Unity documentation",
    "keywords": "Class NodeTransitionPin Point d'attache de connexion entre deux nodes Utiliser TransitionPinModeAttribute pour spécifier les paramètres du boutton (interdire les connexion mutliples, (wip)pin de destination...) Inheritance object NodeTransitionPin<NodeTransition> NodeTransitionPin Implements INodeTransitionPin Inherited Members NodeTransitionPin<NodeTransition>.AllowMultipleTransitions NodeTransitionPin<NodeTransition>.OverlaySelectionMessage NodeTransitionPin<NodeTransition>.Transitions NodeTransitionPin<NodeTransition>.AddTransition(NodeTransition) NodeTransitionPin<NodeTransition>.RemoveTransition(int) NodeTransitionPin<NodeTransition>.RemoveTransition(NodeTransition) NodeTransitionPin<NodeTransition>.RemoveAllTransitions() NodeTransitionPin<NodeTransition>.Clone() Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] public class NodeTransitionPin : NodeTransitionPin<NodeTransition>, INodeTransitionPin Implements INodeTransitionPin Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.graphNode.TransitionPinModeAttribute.html": {
    "href": "api/logiked.source.graphNode.TransitionPinModeAttribute.html",
    "title": "Class TransitionPinModeAttribute | Example Unity documentation",
    "keywords": "Class TransitionPinModeAttribute Modification du comportement des NodeTransitionPin, pour l'editeur visuel. Permet de limiter le nombre de liaisons d'un pin, etc. Inheritance object Attribute TransitionPinModeAttribute Inherited Members Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.graphNode Assembly: Logiked_Source.dll Syntax [Serializable] [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class TransitionPinModeAttribute : Attribute Constructors | Improve this Doc View Source TransitionPinModeAttribute(bool, string) Declaration public TransitionPinModeAttribute(bool allowMultipeTransitions, string overlaySelectionText = null) Parameters Type Name Description bool allowMultipeTransitions string overlaySelectionText Properties | Improve this Doc View Source AllowMultipeTransitions Autoriser plusiers connexion depuis ce pin ? Declaration public bool AllowMultipeTransitions { get; } Property Value Type Description bool | Improve this Doc View Source OverlaySelectionText Message affiché au dessus du pin quand le node est selectionné Declaration public string OverlaySelectionText { get; } Property Value Type Description string Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.manager.BaseGameManager.html": {
    "href": "api/logiked.source.manager.BaseGameManager.html",
    "title": "Class BaseGameManager | Example Unity documentation",
    "keywords": "Class BaseGameManager Type de base pour votre GameManager. Vous devez définir dans cette classe tout les Managers que vous utiliserez et les initialiser avec Initialization() : Méthode d'Initialisation de votre manager (appelée par le GameManager). Cela permet d'initialiser tout les Managers dans un explicitement déterminé contrairement aux fonction event Start(), Awake().. qui s'executent parfois de manière aléatoire. Par exemple, c'est assez pénible quand votre jeu démare avant que vos resources soient initialisés. Attention à ne pas appeler d'autre managers pendant cette initialisation ! Inheritance object Object Component Behaviour MonoBehaviour IBaseManager BaseManager<BaseGameManager> BaseGameManager DefaultGameManager Inherited Members BaseManager<BaseGameManager>.AlreadyInit BaseManager<BaseGameManager>.Instance BaseManager<BaseGameManager>.Initialization() IBaseManager.InitManager() Namespace: logiked.source.manager Assembly: Logiked_Source.dll Syntax [ExecuteAlways] public abstract class BaseGameManager : BaseManager<BaseGameManager> Properties | Improve this Doc View Source TempInstParent Parent pour les objets générés dans la scène par Declaration public static Transform TempInstParent { get; } Property Value Type Description Transform Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.manager.BaseManager-1.html": {
    "href": "api/logiked.source.manager.BaseManager-1.html",
    "title": "Class BaseManager<T> | Example Unity documentation",
    "keywords": "Class BaseManager<T> Type de base pour tout vos managers-singletons de votre scène Inheritance object Object Component Behaviour MonoBehaviour IBaseManager BaseManager<T> TranslationManager BaseGameManager Inherited Members IBaseManager.InitManager() Namespace: logiked.source.manager Assembly: Logiked_Source.dll Syntax public abstract class BaseManager<T> : IBaseManager where T : MonoBehaviour Type Parameters Name Description T Type de votre Manager à récrire (pour le champ Instance du singleton) Properties | Improve this Doc View Source AlreadyInit Declaration public bool AlreadyInit { get; } Property Value Type Description bool | Improve this Doc View Source Instance Declaration public static T Instance { get; } Property Value Type Description T Methods | Improve this Doc View Source Initialization() Méthode d'Initialisation de votre manager (appelée par le GameManager). Cela permet d'initialiser tout les Managers dans un explicitement déterminé contrairement aux fonction event Start(), Awake().. qui s'executent parfois de manière aléatoire. Par exemple, c'est assez pénible quand votre jeu démare avant que vos resources soient initialisés. Attention à ne pas appeler d'autre managers pendant cette initialisation ! Declaration public override sealed void Initialization() Overrides IBaseManager.Initialization() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.manager.DefaultGameManager.html": {
    "href": "api/logiked.source.manager.DefaultGameManager.html",
    "title": "Class DefaultGameManager | Example Unity documentation",
    "keywords": "Class DefaultGameManager Game manager par défaut pour tous vos projets Inheritance object Object Component Behaviour MonoBehaviour IBaseManager BaseManager<BaseGameManager> BaseGameManager DefaultGameManager Inherited Members BaseGameManager.TempInstParent BaseManager<BaseGameManager>.AlreadyInit BaseManager<BaseGameManager>.Instance BaseManager<BaseGameManager>.Initialization() Namespace: logiked.source.manager Assembly: Logiked_Source.dll Syntax [AddComponentMenu(\"Logiked/DefaultGameManager\")] public class DefaultGameManager : BaseGameManager Methods | Improve this Doc View Source InitManager() Declaration protected override void InitManager() Overrides IBaseManager.InitManager() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.manager.html": {
    "href": "api/logiked.source.manager.html",
    "title": "Namespace logiked.source.manager | Example Unity documentation",
    "keywords": "Namespace logiked.source.manager Classes BaseGameManager Type de base pour votre GameManager. Vous devez définir dans cette classe tout les Managers que vous utiliserez et les initialiser avec Initialization() : Méthode d'Initialisation de votre manager (appelée par le GameManager). Cela permet d'initialiser tout les Managers dans un explicitement déterminé contrairement aux fonction event Start(), Awake().. qui s'executent parfois de manière aléatoire. Par exemple, c'est assez pénible quand votre jeu démare avant que vos resources soient initialisés. Attention à ne pas appeler d'autre managers pendant cette initialisation ! BaseManager<T> Type de base pour tout vos managers-singletons de votre scène DefaultGameManager Game manager par défaut pour tous vos projets IBaseManager"
  },
  "api/logiked.source.manager.IBaseManager.html": {
    "href": "api/logiked.source.manager.IBaseManager.html",
    "title": "Class IBaseManager | Example Unity documentation",
    "keywords": "Class IBaseManager Inheritance object Object Component Behaviour MonoBehaviour IBaseManager BaseManager<T> Namespace: logiked.source.manager Assembly: Logiked_Source.dll Syntax public abstract class IBaseManager : MonoBehaviour Methods | Improve this Doc View Source Initialization() Declaration public abstract void Initialization() | Improve this Doc View Source InitManager() Declaration protected abstract void InitManager() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.types.GameTimer.EachFrameAction.html": {
    "href": "api/logiked.source.types.GameTimer.EachFrameAction.html",
    "title": "Delegate GameTimer.EachFrameAction | Example Unity documentation",
    "keywords": "Delegate GameTimer.EachFrameAction Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax public delegate bool GameTimer.EachFrameAction(GameTimer t) Parameters Type Name Description GameTimer t Returns Type Description bool Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.types.GameTimer.html": {
    "href": "api/logiked.source.types.GameTimer.html",
    "title": "Class GameTimer | Example Unity documentation",
    "keywords": "Class GameTimer Timer de jeu pour faire Un délai d'attente Une interpolation/animation d'une valeur (Lerp/Slerp...) [WIP] Mettre en pause selon des parametres du jeu (menu de pause, cinématique, etc..) Voir TimerExtention pour d'autres fonctions. Inheritance object GameTimer Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax public class GameTimer Constructors | Improve this Doc View Source GameTimer(float, EachFrameAction) Declaration public GameTimer(float time, GameTimer.EachFrameAction eachFrame) Parameters Type Name Description float time Temps à attendre en secondes GameTimer.EachFrameAction eachFrame La fonction appelée a chaque frame du timer (retourner boolean, parametre : GameTimer) | Improve this Doc View Source GameTimer(float, Action, EachFrameAction) Declaration public GameTimer(float time, Action endCallback, GameTimer.EachFrameAction eachFrame) Parameters Type Name Description float time Temps à attendre en secondes Action endCallback La foncion appelée une fois le timer écoulé GameTimer.EachFrameAction eachFrame La fonction appelée a chaque frame du timer (retourner boolean, parametre : GameTimer) | Improve this Doc View Source GameTimer(float, Action) Declaration public GameTimer(float time, Action endCallback = null) Parameters Type Name Description float time Temps à attendre en secondes Action endCallback La foncion appelée une fois le timer écoulé Properties | Improve this Doc View Source IsDone Le timer à t-il fini de tourner ? Declaration public bool IsDone { get; } Property Value Type Description bool | Improve this Doc View Source IsRunning Le timer est t-il en train de tourner? Declaration public bool IsRunning { get; } Property Value Type Description bool | Improve this Doc View Source Percent Le pourcentage de temps restant (compris entre 0 et 1) Declaration public float Percent { get; } Property Value Type Description float | Improve this Doc View Source RemainTime Le temps restant en secondes Declaration public float RemainTime { get; } Property Value Type Description float Methods | Improve this Doc View Source Done() Réalise le callback du timer et l'arrete Declaration public void Done() | Improve this Doc View Source Stop() Arrete le timer sans réaliser le callback Declaration public void Stop() Events | Improve this Doc View Source EachFrame Declaration public event GameTimer.EachFrameAction EachFrame Event Type Type Description GameTimer.EachFrameAction Extension Methods TimerExtention.AutoStop(GameTimer) TimerExtention.IsDefinedAndActive(GameTimer) TimerExtention.IsNullOrInactive(GameTimer) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.types.html": {
    "href": "api/logiked.source.types.html",
    "title": "Namespace logiked.source.types | Example Unity documentation",
    "keywords": "Namespace logiked.source.types Classes GameTimer Timer de jeu pour faire Un délai d'attente Une interpolation/animation d'une valeur (Lerp/Slerp...) [WIP] Mettre en pause selon des parametres du jeu (menu de pause, cinématique, etc..) Voir TimerExtention pour d'autres fonctions. InputStorage [WIP] Classe de base pour le stockage des états des inputs. A redefinir pour chage projets. Utile pour le partage des inputs au travers du code, et l'envoi en ligne. Utile aussi pour passer l'input system 2.0 de unity avec un mode d'interpretation 1.0 : convrtit des valeurs en KeyDown, KeyUp... LogikedPlugin<T> Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Structs vfloat Un float avec une variation. A chaque fois que ce float est cast, une nouvelle valeur est générée à partir de la variation. Attention : aucun moyen d'étre connecté à une seed actuellement Enums InputStorage.InputState Delegates GameTimer.EachFrameAction"
  },
  "api/logiked.source.types.InputStorage.html": {
    "href": "api/logiked.source.types.InputStorage.html",
    "title": "Class InputStorage | Example Unity documentation",
    "keywords": "Class InputStorage [WIP] Classe de base pour le stockage des états des inputs. A redefinir pour chage projets. Utile pour le partage des inputs au travers du code, et l'envoi en ligne. Utile aussi pour passer l'input system 2.0 de unity avec un mode d'interpretation 1.0 : convrtit des valeurs en KeyDown, KeyUp... Inheritance object InputStorage Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax [Serializable] public class InputStorage Methods | Improve this Doc View Source Check(string, InputState) Vérifier l'état d'une valeur Declaration public bool Check(string input, InputStorage.InputState val) Parameters Type Name Description string input Nom de l'input InputStorage.InputState val Etat de l'input Returns Type Description bool | Improve this Doc View Source RegisterValue(string, float) Enregistre la valeur de l'input dans le dictionnaire. A utiliser dans un update, eviter FixedUpdate Declaration public void RegisterValue(string input, float value) Parameters Type Name Description string input float value Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.types.InputStorage.InputState.html": {
    "href": "api/logiked.source.types.InputStorage.InputState.html",
    "title": "Enum InputStorage.InputState | Example Unity documentation",
    "keywords": "Enum InputStorage.InputState Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax [Serializable] public enum InputStorage.InputState Fields Name Description KeyDown KeyPressed KeyUp None Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.types.LogikedPlugin-1.html": {
    "href": "api/logiked.source.types.LogikedPlugin-1.html",
    "title": "Class LogikedPlugin<T> | Example Unity documentation",
    "keywords": "Class LogikedPlugin<T> Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Inheritance object Object ScriptableObject LogikedPlugin<T> LogikedPlugin_Language LogikedPlugin_2DTools Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax public abstract class LogikedPlugin<T> : ScriptableObject where T : ScriptableObject Type Parameters Name Description T Fields | Improve this Doc View Source LabelName Declaration public const string LabelName = \"LogikedPluginSettings\" Field Value Type Description string Properties | Improve this Doc View Source Instance Declaration public static T Instance { get; } Property Value Type Description T | Improve this Doc View Source LogColors Couleur des logs de ce package Declaration public virtual Color LogColors { get; } Property Value Type Description Color Methods | Improve this Doc View Source Log(object, ErrorLevel, Object) Les les informations du plugin Logiked Source Declaration public static void Log(object message, DebugC.ErrorLevel errorLevel = ErrorLevel.Log, Object context = null) Parameters Type Name Description object message DebugC.ErrorLevel errorLevel Object context Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.source.types.vfloat.html": {
    "href": "api/logiked.source.types.vfloat.html",
    "title": "Struct vfloat | Example Unity documentation",
    "keywords": "Struct vfloat Un float avec une variation. A chaque fois que ce float est cast, une nouvelle valeur est générée à partir de la variation. Attention : aucun moyen d'étre connecté à une seed actuellement Namespace: logiked.source.types Assembly: Logiked_Source.dll Syntax [Serializable] public struct vfloat Constructors | Improve this Doc View Source vfloat(float, float) Declaration public vfloat(float mainValue = 0, float variation = 0) Parameters Type Name Description float mainValue float variation | Improve this Doc View Source vfloat(float) Declaration public vfloat(float mainValue = 0) Parameters Type Name Description float mainValue Fields | Improve this Doc View Source value Declaration [SerializeField] public float value Field Value Type Description float | Improve this Doc View Source variation Declaration [SerializeField] public float variation Field Value Type Description float Properties | Improve this Doc View Source ValueGenerated Valeur randomisées générée avec la variation Declaration public float ValueGenerated { get; } Property Value Type Description float Methods | Improve this Doc View Source FrozenValue(int) Valeur randomisées générée par une seed Declaration public float FrozenValue(int seed) Parameters Type Name Description int seed Returns Type Description float | Improve this Doc View Source FrozenValue(Random) Valeur randomisées générée par un random custom Declaration public float FrozenValue(Random rand) Parameters Type Name Description Random rand Returns Type Description float Operators | Improve this Doc View Source implicit operator float(vfloat) Conversion automatique en float, retourne la valeur randomisée Declaration public static implicit operator float(vfloat f) Parameters Type Name Description vfloat f Le vfloat à convertir Returns Type Description float | Improve this Doc View Source implicit operator vfloat(float) Conversion automatique en vfloat. Declaration public static implicit operator vfloat(float f) Parameters Type Name Description float f Le float à convertir Returns Type Description vfloat Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.utilities.ConvertUtils.html": {
    "href": "api/logiked.source.utilities.ConvertUtils.html",
    "title": "Class ConvertUtils | Example Unity documentation",
    "keywords": "Class ConvertUtils Des fonctions de conversions vers des bizzareries Inheritance object ConvertUtils Namespace: logiked.source.utilities Assembly: Logiked_Source.dll Syntax public class ConvertUtils Methods | Improve this Doc View Source IntToVectorClockwise4(int) Declaration public static Vector2Int IntToVectorClockwise4(int source) Parameters Type Name Description int source Returns Type Description Vector2Int Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.utilities.EditScriptableAttribute.html": {
    "href": "api/logiked.source.utilities.EditScriptableAttribute.html",
    "title": "Class EditScriptableAttribute | Example Unity documentation",
    "keywords": "Class EditScriptableAttribute Display a ScriptableObject field with an inline editor Inheritance object Attribute PropertyAttribute FutureFieldAttribute EditScriptableAttribute Inherited Members FutureFieldAttribute.ArrayInteractionMode FutureFieldAttribute.stored FutureFieldAttribute.tempNextDrawer FutureFieldAttribute.propertyAlreadyDrawn FutureFieldAttribute.propertyIndex Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId Namespace: logiked.source.utilities Assembly: Logiked_Source.dll Syntax public class EditScriptableAttribute : FutureFieldAttribute Constructors | Improve this Doc View Source EditScriptableAttribute(bool) Declaration public EditScriptableAttribute(bool openByDefault = false) Parameters Type Name Description bool openByDefault Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.source.utilities.html": {
    "href": "api/logiked.source.utilities.html",
    "title": "Namespace logiked.source.utilities | Example Unity documentation",
    "keywords": "Namespace logiked.source.utilities Classes ConvertUtils Des fonctions de conversions vers des bizzareries EditScriptableAttribute Display a ScriptableObject field with an inline editor SimpleDestroyAfter Classe utilitaire qui suprime l'objet défini aprés un temps."
  },
  "api/logiked.source.utilities.SimpleDestroyAfter.html": {
    "href": "api/logiked.source.utilities.SimpleDestroyAfter.html",
    "title": "Class SimpleDestroyAfter | Example Unity documentation",
    "keywords": "Class SimpleDestroyAfter Classe utilitaire qui suprime l'objet défini aprés un temps. Inheritance object Object Component Behaviour MonoBehaviour SimpleDestroyAfter Namespace: logiked.source.utilities Assembly: Logiked_Source.dll Syntax public class SimpleDestroyAfter : MonoBehaviour Fields | Improve this Doc View Source obj L'objet en question. Si null, l'objet choisis sera ce GameObject. Declaration [Tooltip(\"L'objet en question. Si null, l'objet choisis sera ce GameObject.\")] public GameObject obj Field Value Type Description GameObject | Improve this Doc View Source time Le temps avant la destruction de l'objet Declaration [Tooltip(\"Le temps avant la destruction de l'objet.\")] public float time Field Value Type Description float Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DFile.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DFile.html",
    "title": "Class Animation2DFile | Example Unity documentation",
    "keywords": "Class Animation2DFile Un fichier d'animation Inheritance object Object ScriptableObject Animation2DFile Animation2DFileVariations Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [CreateAssetMenu(fileName = \"anim\", menuName = \"Logiked/2DTools/2D Animation\", order = 2)] [Serializable] public class Animation2DFile : ScriptableObject Properties | Improve this Doc View Source Duration Declaration public float Duration { get; } Property Value Type Description float | Improve this Doc View Source LoopMode Declaration public Animation2DFile.LoopProcess LoopMode { get; } Property Value Type Description Animation2DFile.LoopProcess | Improve this Doc View Source Sprites Declaration public virtual Sprite[] Sprites { get; } Property Value Type Description Sprite[] Methods | Improve this Doc View Source GetSprites(int) Récupère des sprites spécifiques Declaration public virtual Sprite[] GetSprites(int variationId) Parameters Type Name Description int variationId L'Id de la variation. N'a un effet que sur une Animation2DFileVariations Returns Type Description Sprite[] Les sprites Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.Tool2D.animation.Animation2DFile.LoopProcess.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DFile.LoopProcess.html",
    "title": "Enum Animation2DFile.LoopProcess | Example Unity documentation",
    "keywords": "Enum Animation2DFile.LoopProcess Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public enum Animation2DFile.LoopProcess Fields Name Description Loop Once OnceDisapear PingPong Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DFileVariations.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DFileVariations.html",
    "title": "Class Animation2DFileVariations | Example Unity documentation",
    "keywords": "Class Animation2DFileVariations Un fichier d'animation avec plusieurs directions Inheritance object Object ScriptableObject Animation2DFile Animation2DFileVariations Inherited Members Animation2DFile.Duration Animation2DFile.LoopMode Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [CreateAssetMenu(fileName = \"anim\", menuName = \"Logiked/2DTools/2D Animation - Multi Direction\", order = 2)] [Serializable] public class Animation2DFileVariations : Animation2DFile Properties | Improve this Doc View Source CustomDirectionCount Declaration public int CustomDirectionCount { get; } Property Value Type Description int | Improve this Doc View Source DirectionCountMode Declaration public Animation2DFileVariations.VariationCountModeEnum DirectionCountMode { get; } Property Value Type Description Animation2DFileVariations.VariationCountModeEnum | Improve this Doc View Source Sprites Declaration public override Sprite[] Sprites { get; } Property Value Type Description Sprite[] Overrides Animation2DFile.Sprites | Improve this Doc View Source SpritesVariations Declaration public Animation2DFileVariations.SpriteDirectionBundle[] SpritesVariations { get; } Property Value Type Description SpriteDirectionBundle[] | Improve this Doc View Source VariationCount Declaration public int VariationCount { get; } Property Value Type Description int Methods | Improve this Doc View Source GetSprites(int) Récupère des sprites spécifiques Declaration public override Sprite[] GetSprites(int variationId) Parameters Type Name Description int variationId L'Id de la variation. N'a un effet que sur une Animation2DFileVariations Returns Type Description Sprite[] Les sprites Overrides Animation2DFile.GetSprites(int) Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.Tool2D.animation.Animation2DFileVariations.SpriteDirectionBundle.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DFileVariations.SpriteDirectionBundle.html",
    "title": "Class Animation2DFileVariations.SpriteDirectionBundle | Example Unity documentation",
    "keywords": "Class Animation2DFileVariations.SpriteDirectionBundle Classe pour visualiser une liste de sprites Inheritance object Animation2DFileVariations.SpriteDirectionBundle Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [Serializable] public class Animation2DFileVariations.SpriteDirectionBundle Properties | Improve this Doc View Source Sprites Declaration public Sprite[] Sprites { get; } Property Value Type Description Sprite[] Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DFileVariations.VariationCountModeEnum.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DFileVariations.VariationCountModeEnum.html",
    "title": "Enum Animation2DFileVariations.VariationCountModeEnum | Example Unity documentation",
    "keywords": "Enum Animation2DFileVariations.VariationCountModeEnum Nombre de directions Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public enum Animation2DFileVariations.VariationCountModeEnum Fields Name Description _4DirectionsAnimation _8DirectionsAnimation CustomVariationCount Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DNode.AnimationTransitionMode.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DNode.AnimationTransitionMode.html",
    "title": "Enum Animation2DNode.AnimationTransitionMode | Example Unity documentation",
    "keywords": "Enum Animation2DNode.AnimationTransitionMode Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public enum Animation2DNode.AnimationTransitionMode Fields Name Description FromAnyState FromThisState Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DNode.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DNode.html",
    "title": "Class Animation2DNode | Example Unity documentation",
    "keywords": "Class Animation2DNode Animation wrapper for 2D Animator Inheritance object GraphicNode<Animator2DTransition> Animation2DNode Inherited Members GraphicNode<Animator2DTransition>.AllTransitions GraphicNode<Animator2DTransition>.Clone(int) GraphicNode<Animator2DTransition>.uniqueNodeId GraphicNode<Animator2DTransition>.UniqueNodeId GraphicNode<Animator2DTransition>.text Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [Serializable] public class Animation2DNode : GraphicNode<Animator2DTransition> Constructors | Improve this Doc View Source Animation2DNode() Declaration public Animation2DNode() Properties | Improve this Doc View Source AnimationTransition Declaration public NodeTransitionPin<Animator2DTransition> AnimationTransition { get; } Property Value Type Description NodeTransitionPin<Animator2DTransition> | Improve this Doc View Source File Declaration public Animation2DFile File { get; } Property Value Type Description Animation2DFile | Improve this Doc View Source ShortAnimationName Declaration public string ShortAnimationName { get; } Property Value Type Description string | Improve this Doc View Source SpeedModifier Declaration public float SpeedModifier { get; } Property Value Type Description float | Improve this Doc View Source TransitionPins Declaration public override NodeTransitionPin<Animator2DTransition>[] TransitionPins { get; } Property Value Type Description NodeTransitionPin<Animator2DTransition>[] Overrides logiked.source.graphNode.GraphicNode<logiked.Tool2D.animation.Animator2DTransition>.TransitionPins | Improve this Doc View Source TransitionsMode Declaration public Animation2DNode.AnimationTransitionMode TransitionsMode { get; } Property Value Type Description Animation2DNode.AnimationTransitionMode | Improve this Doc View Source VariationVariableId Declaration public int VariationVariableId { get; set; } Property Value Type Description int Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animation2DReader.html": {
    "href": "api/logiked.Tool2D.animation.Animation2DReader.html",
    "title": "Class Animation2DReader | Example Unity documentation",
    "keywords": "Class Animation2DReader Inheritance object Animation2DReader Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public class Animation2DReader Constructors | Improve this Doc View Source Animation2DReader(Animation2DFile, float) Declaration public Animation2DReader(Animation2DFile from, float speedModifier = 1) Parameters Type Name Description Animation2DFile from float speedModifier Fields | Improve this Doc View Source file Declaration public readonly Animation2DFile file Field Value Type Description Animation2DFile Properties | Improve this Doc View Source FrameDeltaCumulated Declaration public float FrameDeltaCumulated { get; } Property Value Type Description float | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; set; } Property Value Type Description bool | Improve this Doc View Source PercentFinished Declaration public float PercentFinished { get; } Property Value Type Description float | Improve this Doc View Source SpeedModifier Declaration public float SpeedModifier { get; set; } Property Value Type Description float | Improve this Doc View Source Variation Declaration public int Variation { get; set; } Property Value Type Description int Methods | Improve this Doc View Source GetCurrentSprite() Declaration public Sprite GetCurrentSprite() Returns Type Description Sprite | Improve this Doc View Source Pause() Declaration public void Pause() | Improve this Doc View Source Play() Declaration public void Play() | Improve this Doc View Source Restart() Declaration public void Restart() | Improve this Doc View Source SetPlayState(bool) Declaration public void SetPlayState(bool on) Parameters Type Name Description bool on | Improve this Doc View Source Stop() Declaration public void Stop() Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animator2DRule.AnimationRuleComparaison.html": {
    "href": "api/logiked.Tool2D.animation.Animator2DRule.AnimationRuleComparaison.html",
    "title": "Enum Animator2DRule.AnimationRuleComparaison | Example Unity documentation",
    "keywords": "Enum Animator2DRule.AnimationRuleComparaison Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public enum Animator2DRule.AnimationRuleComparaison Fields Name Description Equal NotEqual Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animator2DRule.html": {
    "href": "api/logiked.Tool2D.animation.Animator2DRule.html",
    "title": "Class Animator2DRule | Example Unity documentation",
    "keywords": "Class Animator2DRule Rules for Animator2DTransitions between animators variables Inheritance object Animator2DRule Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [Serializable] public class Animator2DRule Properties | Improve this Doc View Source Comparator Declaration public Animator2DRule.AnimationRuleComparaison Comparator { get; } Property Value Type Description Animator2DRule.AnimationRuleComparaison | Improve this Doc View Source Result Declaration public int Result { get; } Property Value Type Description int | Improve this Doc View Source VariableId Declaration public int VariableId { get; } Property Value Type Description int Methods | Improve this Doc View Source Evaluate(int) Declaration public bool Evaluate(int val) Parameters Type Name Description int val Returns Type Description bool Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animator2DTransition.AnimationRuleEnd.html": {
    "href": "api/logiked.Tool2D.animation.Animator2DTransition.AnimationRuleEnd.html",
    "title": "Enum Animator2DTransition.AnimationRuleEnd | Example Unity documentation",
    "keywords": "Enum Animator2DTransition.AnimationRuleEnd Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax public enum Animator2DTransition.AnimationRuleEnd Fields Name Description AnimationEnded Immediately Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.Animator2DTransition.html": {
    "href": "api/logiked.Tool2D.animation.Animator2DTransition.html",
    "title": "Class Animator2DTransition | Example Unity documentation",
    "keywords": "Class Animator2DTransition Inheritance object NodeTransition Animator2DTransition Inherited Members NodeTransition.Clonetransition() NodeTransition.NextNodeId Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [Serializable] public class Animator2DTransition : NodeTransition Constructors | Improve this Doc View Source Animator2DTransition(int) Declaration public Animator2DTransition(int nextNodeId) Parameters Type Name Description int nextNodeId Properties | Improve this Doc View Source EndRuleInteraction Declaration public Animator2DTransition.AnimationRuleEnd EndRuleInteraction { get; } Property Value Type Description Animator2DTransition.AnimationRuleEnd | Improve this Doc View Source Rules Declaration public List<Animator2DRule> Rules { get; } Property Value Type Description List<Animator2DRule> Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.AnimatorController2DFile.html": {
    "href": "api/logiked.Tool2D.animation.AnimatorController2DFile.html",
    "title": "Class AnimatorController2DFile | Example Unity documentation",
    "keywords": "Class AnimatorController2DFile Animator controller File for 2D animations Inheritance object Object ScriptableObject AnimatorController2DFile Implements INodeStorage<Animation2DNode, Animator2DTransition> Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [Serializable] [CreateAssetMenu(fileName = \"animator\", menuName = \"Logiked/2DTools/2D Animator Controller\", order = 2)] public sealed class AnimatorController2DFile : ScriptableObject, INodeStorage<Animation2DNode, Animator2DTransition> Properties | Improve this Doc View Source AnimationCount Nombre d'animarions dans le fichier Declaration public int AnimationCount { get; } Property Value Type Description int | Improve this Doc View Source GetNodeArrayPropertyPath Declaration public string GetNodeArrayPropertyPath { get; } Property Value Type Description string Methods | Improve this Doc View Source GetNodeById(int) Type des nouveau nodes à instanciés avec Declaration public Animation2DNode GetNodeById(int id) Parameters Type Name Description int id Returns Type Description Animation2DNode | Improve this Doc View Source GetNodes() Declaration public List<Animation2DNode> GetNodes() Returns Type Description List<Animation2DNode> | Improve this Doc View Source NewNodeTypes() Declaration public Type NewNodeTypes() Returns Type Description Type | Improve this Doc View Source SetNodes(List<Animation2DNode>) Declaration public void SetNodes(List<Animation2DNode> nodes) Parameters Type Name Description List<Animation2DNode> nodes Implements INodeStorage<N, T> Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "api/logiked.Tool2D.animation.AnimatorRenderer2D.html": {
    "href": "api/logiked.Tool2D.animation.AnimatorRenderer2D.html",
    "title": "Class AnimatorRenderer2D | Example Unity documentation",
    "keywords": "Class AnimatorRenderer2D Inheritance object Object Component Behaviour MonoBehaviour AnimatorRenderer2D Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [AddComponentMenu(\"Logiked/2D Animator Renderer\")] [ExecuteAlways] public class AnimatorRenderer2D : MonoBehaviour Properties | Improve this Doc View Source AnimatorFile Declaration public AnimatorController2DFile AnimatorFile { get; } Property Value Type Description AnimatorController2DFile | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description bool | Improve this Doc View Source percentStateFinished Pourcentage d'avancement de l'animation actuellement jouée Declaration public float percentStateFinished { get; } Property Value Type Description float Methods | Improve this Doc View Source GetVariablesList() Retourne la liste des varibales actuellement utilisées par l'animator Declaration public Animator2DVariable[] GetVariablesList() Returns Type Description Animator2DVariable[] La liste des variables | Improve this Doc View Source Pause() Declaration public void Pause() | Improve this Doc View Source Play() Declaration public void Play() | Improve this Doc View Source Restart() Declaration public void Restart() | Improve this Doc View Source SetStateValue(string, int, bool) Declaration public void SetStateValue(string variableName, int val, bool useAsTrigger = true) Parameters Type Name Description string variableName int val bool useAsTrigger | Improve this Doc View Source Stop() Declaration public void Stop() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.animation.html": {
    "href": "api/logiked.Tool2D.animation.html",
    "title": "Namespace logiked.Tool2D.animation | Example Unity documentation",
    "keywords": "Namespace logiked.Tool2D.animation Classes Animation2DFile Un fichier d'animation Animation2DFileVariations Un fichier d'animation avec plusieurs directions Animation2DFileVariations.SpriteDirectionBundle Classe pour visualiser une liste de sprites Animation2DNode Animation wrapper for 2D Animator Animation2DReader Animator2DRule Rules for Animator2DTransitions between animators variables Animator2DTransition AnimatorController2DFile Animator controller File for 2D animations AnimatorRenderer2D SimpleAnimationRenderer2D Enums Animation2DFile.LoopProcess Animation2DFileVariations.VariationCountModeEnum Nombre de directions Animation2DNode.AnimationTransitionMode Animator2DRule.AnimationRuleComparaison Animator2DTransition.AnimationRuleEnd"
  },
  "api/logiked.Tool2D.animation.SimpleAnimationRenderer2D.html": {
    "href": "api/logiked.Tool2D.animation.SimpleAnimationRenderer2D.html",
    "title": "Class SimpleAnimationRenderer2D | Example Unity documentation",
    "keywords": "Class SimpleAnimationRenderer2D Inheritance object Object Component Behaviour MonoBehaviour SimpleAnimationRenderer2D Namespace: logiked.Tool2D.animation Assembly: Logiked_2DTools.dll Syntax [AddComponentMenu(\"Logiked/2D Animation Renderer\")] [ExecuteAlways] public class SimpleAnimationRenderer2D : MonoBehaviour Properties | Improve this Doc View Source AnimationFile Declaration [SerializeField] public Animation2DFile AnimationFile { get; set; } Property Value Type Description Animation2DFile | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description bool | Improve this Doc View Source Speed Apply the speed to the current animatonReader Declaration public float Speed { get; set; } Property Value Type Description float Methods | Improve this Doc View Source Pause() Declaration public void Pause() | Improve this Doc View Source Play() Declaration public void Play() | Improve this Doc View Source Restart() Declaration public void Restart() | Improve this Doc View Source SetAnim(Animation2DFile) Declaration public void SetAnim(Animation2DFile value) Parameters Type Name Description Animation2DFile value | Improve this Doc View Source Stop() Declaration public void Stop() Extension Methods ObjectsExtension.CopyComponent<T>(T, GameObject) ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object)"
  },
  "api/logiked.Tool2D.settings.html": {
    "href": "api/logiked.Tool2D.settings.html",
    "title": "Namespace logiked.Tool2D.settings | Example Unity documentation",
    "keywords": "Namespace logiked.Tool2D.settings Classes LogikedPlugin_2DTools Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Les propriétés du plugin 2DTools"
  },
  "api/logiked.Tool2D.settings.LogikedPlugin_2DTools.html": {
    "href": "api/logiked.Tool2D.settings.LogikedPlugin_2DTools.html",
    "title": "Class LogikedPlugin_2DTools | Example Unity documentation",
    "keywords": "Class LogikedPlugin_2DTools Scriptable object unique à chaque plugin permetant la configuration des assembly Logiked. Accesible via le code par un accesseur statique Instance afin d'être disponible dans tout le projet. Accessible dans l'inspecteur unity dans le dossier Resources/Logiked Les propriétés du plugin 2DTools Inheritance object Object ScriptableObject LogikedPlugin<LogikedPlugin_2DTools> LogikedPlugin_2DTools Inherited Members LogikedPlugin<LogikedPlugin_2DTools>.LabelName LogikedPlugin<LogikedPlugin_2DTools>.Instance LogikedPlugin<LogikedPlugin_2DTools>.Log(object, DebugC.ErrorLevel, Object) Namespace: logiked.Tool2D.settings Assembly: Logiked_2DTools.dll Syntax [CreateAssetMenu(fileName = \"2DToolsAssemblySettings\", menuName = \"Logiked/2DTools/AssemblySettings\", order = 1)] [Serializable] public class LogikedPlugin_2DTools : LogikedPlugin<LogikedPlugin_2DTools> Properties | Improve this Doc View Source DefaultSpriteCutSize Declaration public int DefaultSpriteCutSize { get; } Property Value Type Description int | Improve this Doc View Source LogColors Couleur des logs de ce package Declaration public override Color LogColors { get; } Property Value Type Description Color Overrides logiked.source.types.LogikedPlugin<logiked.Tool2D.settings.LogikedPlugin_2DTools>.LogColors | Improve this Doc View Source NodeGridPlacement Declaration public bool NodeGridPlacement { get; set; } Property Value Type Description bool | Improve this Doc View Source PlayAnimationsInSceneView Declaration public bool PlayAnimationsInSceneView { get; } Property Value Type Description bool | Improve this Doc View Source PlayAnimatorRenderersInSceneView Declaration public bool PlayAnimatorRenderersInSceneView { get; } Property Value Type Description bool | Improve this Doc View Source PlayPreviewInEditor Declaration public bool PlayPreviewInEditor { get; set; } Property Value Type Description bool Extension Methods ObjectsExtension.SerializeToByteArray(object) ReflectExtention.GetReflectedValueAtPath(object, string, bool) ReflectExtention.IsTypeOf<T>(object) RemoveScriptableObjectExtention.OnRemoveScriptableObject(ScriptableObject)"
  },
  "articles/Features/logiked2DTools/hacheur.html": {
    "href": "articles/Features/logiked2DTools/hacheur.html",
    "title": "Le hacheur | Example Unity documentation",
    "keywords": "tr { width : 100%; } td { text-align: center; width: 50%; vertical-align: middle !important; } Le hacheur Format des spritesheet Pour que le hacheur fonctionne correctement, l'ensemble de vos srpites doivent être organisées d'une des manières suivantes Animations avec des frames assignés statiquement Description Animation avec des sprites répartis sur la texture. Note : en cas de modification de votre texture, il est possible que vos animations ne retrouvent plus leur sprite. Il est donc recomandé d'organiser sa spritesheet d'une des manières suivante. Animations avec des frames assignés dynamiquement Description Animations d'un fichier entier Animations lignes par lignes Animations sur plusieurs fichiers Animation lignes par lignes avec plusieur colonnes Animations avec des frames assignés dynamiquement et des variantes de direction Description Animations sur un fichier avec des variantes de direction. Pratique pour faire un personnage en 4 ou 8 directions (ou plus) Animations sur plusieurs fichiers avec des variantes de direction"
  },
  "articles/Features/logiked2DTools/page.html": {
    "href": "articles/Features/logiked2DTools/page.html",
    "title": "Logiked 2DTools | Example Unity documentation",
    "keywords": "Logiked 2DTools Le package Logiked2DTools permet de simplifier considérablement le travail avec des animation 2D utilisant des framsheets. Les problèmes d'Unity Si vous avez déja conçu un jeu mettant en place des animations en pixel art, vous aurez sans doute remarqué les lacunes d'unity. Voici le traîtement que vous aurez à faire pour obtenir des animation depuis une texture : Ce qui fait perdre du temps Devoir configurer l'import setting de chaque nouvelles textures. Selectionner chaque sprite 1 à 1 pour le mettre dans une animation. En cas de modification de la spriteSheet, l'intergalité des animations sont à refaire de 0. De plus le système de \"Keyframes\" des animations Unity, originellement prévues pour de la 3D, ne sont vraiment pas pratique à utiliser pour des sprites. Ensuite, il faut créer un animator et les transitions entre les animations dans Mecanim. Une fois encore, ce n'est pas pratique et ça prends du temps. Mecanim à été concu pour gérer de l'interpolation entre des animations 3D. Dans le cas d'une animation 2D, 90% des features sont inutiles. On passe plus de temps à désactiver des features qu'a en utiliser. Toute la partie \"Danger Zone\" représente la partie la moins flexible de la chaîne. Si un jour, vous souhaitez modifier votre texture originale pour ajouter une frame ou modifier l'organisation de vos sprites, vous pouvez dire adieu à votre rendu. La plupars des étapes seront à refaire de zéro. Cela limite beaucoup le potentiel du système. La solution proposée Un système légér, pratique et super-flexible On a créer notre propre pipeline de gestion des animations. En plus d'être ultra-permissive, elle permet de visualiser le résultat en temps reel. Voici ses 2 composantes principale. Le Hacheur Le hacheur s'ouvre avec Ctrl+h en selectionnant une texture, il permet de : Configurer l'import settings de la texture selon un presset configurable Configurer la découpe en X et Y de la texture Générer et organiser automatiquement les animation (du type Animation2DFile) Générer l'animator associé (du type AnimatorController2DFile) L'Animatron L'Animatron s'ouvre avec Logiked/Animatron Window en selectionnant un animator. Comme le système mechanim, il permet de : Configurer les liens entre les animation et leur transitions Visualisation en temps reel le rendu de l'animation de manière intuitive issues hacheur: Identifier uniqueness violation: 'Name:_AttackNoMovement2_1_2, Type:Sprite, FileId:0'. Multiple Objects with the same FileId are generated by this Importer. There is no guarantee that subsequent imports of this asset will properly re-link to these targets."
  },
  "articles/Features/logikedItemSystem/page.html": {
    "href": "articles/Features/logikedItemSystem/page.html",
    "title": "Item system | Example Unity documentation",
    "keywords": "Item system [Utilise Logiked_ItemSystem] Le système d'objet c'est un gros morceau.. laisser moi souffler je ferais la doc plus tard. Pour l'instant vous pouvez déja comprendre déja comment foncitonne les Bdds : LogikedDatabase<A, D, C>"
  },
  "articles/Features/logikedLanguage/page.html": {
    "href": "articles/Features/logikedLanguage/page.html",
    "title": "Multilangue | Example Unity documentation",
    "keywords": "Multilangue [Utilise Logiked_Language] Avec l'assembly Logiked Language, faire un jeu en multilangue c'est plus simple. Le plugin permet de s'abstraire au plus possible de l'édition manuelle d'un fichier de language. De plus le fichier généré est compatible avec le standard POedit, permettant à n'importe quel utilisateurs d'utiliser ces outils pour concevoir son propre patch de langues. Notes : Beaucoup des autres plugin logiked utilisent cette dépendance. Mettez vous y aussi, ensemble on travaille mieux. Mini tuto Pour commencer, placez le singleton TranslationManager dans votre scène, (à coté de votre game manager si possible). Il vous proposera de créer un patch de traduction pour vous. Clickez sur \"Fix\" Vous avez maintenant accés à la classe lstring (qui remplacera vos string pour un usage localisé). Ici une classe d'exemple avec un lstring à été définie. Le résultat dans l'editeur est une chaîne à laquelle vous pouver Assigner une clé ID à la chaîne Modifier sa valeur en temps reel La supprimer Le tout sans avoir a vous soucier du fichier de traduction, qui se regénère automatiquement à chaque modifications. Notes : Le fichier de traduction par défaut est editable dans les settings du plugin (fenêtre LogikedConfiguration) ou via LogikedPlugin_Language.Instance.DefaultTranslation dans l'editeur. La section utile Pour interagir directement avec des UI, utilisez le composant LocalizedTextComponent Changer le patch Mettez vote nouveau patch dans le répertoire StreamingAssets/languages au format .po. Ensuite il ne vous reste plus qu'a appeler LoadLanguagePatch(string). Todo Une fenêtre editeur qui montre et regroupe toute les traductions du jeu. Developper un listing des patchs disponibles (et informations de header des patches) dans Streaming Assets afin de rendre plus simple le changement Developper un script qui gènère automatiquement les clés des traductions dans une classe statique, comme une grande énum."
  },
  "articles/Features/logikedSourceAttributes/page.html": {
    "href": "articles/Features/logikedSourceAttributes/page.html",
    "title": "Des attributs sympa | Example Unity documentation",
    "keywords": "Des attributs sympa [Utilise Logiked_Source] Unity et les monobehaviour ca à l'air cool. Vous pouvez mettre des attributs sur vos champs, et l'inspecteur organise différement le résultat à l'écran. [Header(\"C'est marant unity\")] public int toto; public int tata; public int titi; [Space(20)] [Header(\"Oh un espace : truc de dingue\")] public int retoto; Le résultat est kiffant : A noter C'est marrant 5 minutes les Attributs d'affichage, mais dés que vous commencez a avoir plusieurs attributs décorateurs/custom sur un même champs, ca commence a devenir infernal... Vous vous retrouver avec des question genre Quel attribut doit dessiner le champ ? Je peux laisser la main à Unity ? Dans quel ordre j'affiche mes attributs ? Il faut vraiment définir un attribut puis son Drawer pour chaque fichier ? C'est relou on s'y perd. La solution du Ked - Partie tuto A partir de maintenant, faites heriter tout vos attributs de la classe @\"logiked.source.attributes.root.BetterFieldAttribute\" si c'est un modifieur de champ et @\"logiked.source.attributes.root.BetterDecoratorAttribute\" si c'est un attribut décorateur. Ajoutez quelques UNITY_EDITOR et vous obtenez ceci comme base: using logiked.source.attributes; using UnityEngine; #if UNITY_EDITOR using UnityEditor; using logiked.editor; #endif public class TestA : BetterFieldAttribute { //Champs #if UNITY_EDITOR public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) { //Votre code d'affichage property.DrawPropertyField(label); } #endif } Ca a l'air indigeste, mais ne vous inquietez pas, c'est maintenable et ca marche super. Promis. Notes : property.DrawPropertyField(label) c'est une extention qui cherche le meilleur drawer custom pour la propriété et qui le dessine à l'écran. Ca fonctionne mieux que EditorGUILayout.PropertyField(), qui se contente de prendre le Drawer unity de base. Les @\"logiked.source.attributes.root.BetterDecoratorAttribute\" sont des propriétés décoratives et ne doivent pas dessiner le champs (ou vous risquez simplement d'avoir des doublons dans votre inspector) A l'implémentation d'un @\"logiked.source.attributes.root.BetterDecoratorAttribute\", vous êtes obligé de spécifier si votre attribut se dessine avant ou aprés votre champ. Dans votre OnGui vous pouvez à tout moment écrire breakRender = true;, qui stopera l'execution des autres attributs. Vous pouvez aussi override la méthode GetPropertyHeight afin de définir une taille que prendra chacun de vos attributs. La solution du Ked - Ce qui a été dev Modificateurs de base GreyedField permet de griser un champs HideInNormalInspectorAttribute permet de ne pas afficher un champ dans l'inspector, même si il est publique ou sérialisé. LayerAttribute permet d'afficher un entier en une liste de layer mask. SortingLayerAttribute permet d'associer un entier a un SortingLayer. MonoScriptAttribute permet d'assigner une chaine de caractère grâce a un monobehaviour. On peut même restreinde les types assignables au champ. DrawSpriteBox permet d'afficher un champ de sprite en forme rectangulaire plus visuelle. Exemple de ces attributs : Décorateurs sections Les décorarateurs FieldSectionBegin, FieldSectionEnd servent à génerer des sections. FieldSectionColumn permet de rajouter une colonne à une section. Ainsi ce code : Donne cette organisation : Show IF ShowIfAttribute permet d'afficher (ou non) des champs selon une comparaison. [ShowIf(\"Number\", ShowIfOperations.Equal, 1)] public string MySecretString;//Affiché seulement si Number == 1 [ShowIf(ShowIfRepeatMode.Same)] public string Anothermember;//Pareil //Toute la suite est affichée si Number != 1 [ShowIf(ShowIfRepeatMode.NotSame)] [FieldSectionBegin(\"Section\")] public string AnotherSection; [ShowIf(ShowIfRepeatMode.NotSame)] public string eheh; [ShowIf(ShowIfRepeatMode.NotSame)] [FieldSectionEnd] public int test; Résultat : Notes : Le premier paramèetre de show if peut aussi chercher des valeurs de propriétés (todo:bientot des fonctions) au travers de plusieurs objets. Par exemple \"champ1.propiété1.transform.position.x\" est normalement une syntaxe correcte pour le paramètre. Utils RealtimeEditComponent se place sur un GameObject et permet de visualiser et d'éditer un composant d'un type particulier dessus. Ici on edit le composant ItemGunBehaviour sur le prefab GunRevolver."
  },
  "articles/Features/logikedSourceDatabase/page.html": {
    "href": "articles/Features/logikedSourceDatabase/page.html",
    "title": "Les databases | Example Unity documentation",
    "keywords": "Les databases [Utilise Logiked_Source] Dans les projets, on a souvents recours à des scriptables objects de toute nature. Dans un jeu typique typiquement on retrouve fréquement Des objets Des personnages Des sons Des structures qui se génèrent Des des pièces de votre roguelike ... C'est pas les idées qui manquent... Le namepace logiked.source.database réponds au besoins suivants Pouvoir lister ces resources, les regrouper et les organiser en catégories/tags Avoir un accés simple aux resources depuis n'importe quelle partie du code Pouvoir, a terme, supporter le modding Note : On est pas dans une optique de performance. On ne parle pas de BDDs qui traitent des millions d'élements avec des requêtes, comme en SQL ou autre. Ce qui est encore en [WIP/Todo] L'accés aux élements par des IDs customs L'ajout dynamique d'élements L'ajout dynamique de catégories La création d'un script qui référence tous les objets de la Bdd dans une classe statique, pour pouvoir faire var a = DatabaseItems.Categorie1.Item2; Le mini Tuto : creer sa Bdd [WIP] Commencez par creer un objet de base qui hérite de DatabaseAbstractElement. Il représente une valeur pour votre Bdd. using logiked.source.database; using UnityEngine; public class Fruit : DatabaseAbstractElement { public @\"logiked.language.translate.lstring\" nom; public int solidite; public bool vitamineC; public override string ItemName => nom; } Ensuite, creez une classe pour de votre BDD qui hérite de LogikedDatabase<A, D, C> Allez voir la rérérence pour les paramètres, vous pouvez copiez ceux ici. N'oubliez pas d'ajouter un CreateAssetMenu pour pouvoir l'instancier dans votre projet. Ajoutez aussi un inspecteur custom qui hérite de Inspector_LogikedDatabase. using logiked.source.database; using UnityEngine; [CreateAssetMenu(fileName = \"FruitDatabase\", menuName = \"New Database For Fruits\", order = 1)] public class Database : LogikedDatabase<Database, Fruit, DatabaseCategory> { } #if UNITY_EDITOR [UnityEditor.CustomEditor(typeof(Database))] public class Inspector_Database : logiked.items.editor.Inspector_LogikedDatabase{} #endif Vous pouvez maintenant créer votre BDD dans votre projet. Mettez là dans un dossier (dans vos resources de préférence) Ajoutez une catégorie pour vos élements On va maintenant pouvoir ajouter des élements. Clickez sur \"new element\" en bas. Votre premier élement est créer, vous pouvez lui assigner un sprite, des Tags et modifier les champs que vous avez définis. Remarquez que les champs de votre classe ne sont pas trés bien affichés, on peut mieux faire en ajoutant quelques attributs : [FieldSectionBegin(\"Title\")] public string nom; public int solidite; [FieldSectionEnd] public bool vitamineC; WIP : Dans le cadre ou vous voulez executer du code particulier à la création de vos fichiers, ou pouvoir encadrer les paramettres pour leur création, vous pouvez redéfinir des méthodes d'affichage dans le code inspecteur de votre BDD. Par exemple : ce code permet d'ajouter une clé customisé pour le Nom lstring de votre element, afin qu'il puisse être traduit automatiquement. public override DatabaseAbstractElement CreateNewElement(int category, string fileName) { var item = CreateNewElement(category, fileName) as Fruit; item.nom.SetAndSaveValues($\"STRING.Fruits.{GetCategory(category).CategoryName}.{fileName}\", fileName); return item; } Note: essayez de supprimer un élement de votre BDD (en cliquant sur la petite croix à coté de lui). Si le descripteur comporte un lstring, il vous sera demandé automatiquement si vous voulez supprimer sa clé dans le patch de langue, afin de ne pas avoir de chaînes inutilisés. Pour finir le tuto Pour chaque catégorie, vous pouvez modifier le Descripteur utilisé pour la création de nouveau élements. Dans l'éteur il vous suffit d'assigner une valeur du champ DescriptorClass de votre catégorie avec une classe hérité de @logiked.source.database.DatabaseCategory. Vous pouvez redéfinir le type de catégories utilisés dans la BDD en le précisant dans la définition de votre type LogikedDatabase<A, D, C> (paramètre C). Fonctions utiles ouais"
  },
  "articles/Features/logikedSourceExtentions/page.html": {
    "href": "articles/Features/logikedSourceExtentions/page.html",
    "title": "Extentions & Racourcis | Example Unity documentation",
    "keywords": "Extentions & Racourcis [Utilise Logiked_Source] Note: C'est vraiment reloux de réecrire la doc plus lisiblement sous forme d'articles comme celui-ci, donc je vais favoriser des redirections. La plupars des classes cette sections sont tirés du namespace logiked.source.extentions ET logiked.source.utilities GenericsExtentions : Extentions sur les types courants (strings, int, float, Vectors3, dictionnaires...) Round()/Sign()/Cycle() de nombres Conversion/Multiplication/Rotation des vecteurs Raccourcis sur les string : IsNullOrEmpty() Raccourcis dictionnaire : GetOrDefault() ObjectsExtension : Extentions sur les types UnityEngine ou System (GameObject, ParticleSystem, Type.. ) Inst()/AddOrGetComponent()/SafetyDestroy() sur GameObject SetParticleActive() sur les particleSystem GetFieldValue()/SetFieldValue() sur les object DebugClassContentReflection sur les Type"
  },
  "articles/Features/logikedSourceTypes/page.html": {
    "href": "articles/Features/logikedSourceTypes/page.html",
    "title": "Des sales System.Types | Example Unity documentation",
    "keywords": "Des sales System.Types [Utilise Logiked_Source] Ici quelque types utiles pour le développement de vos jeux. Pour plus de détail, réferez vous à la doc. vfloat Un float avec une variation aléatoire intégrée. Note: actuellement le système de random utilisé est UnityEngine.Random, de plus la valeur du float est recalculée à chaque fois que le float est cast. Enffonction des besoins bientot on aura peut-être la possibilité de préciser une seed/Système de random ? limiter le random à 1 seule initialisation ? On verra GameTimer Classe qui permet de gérer un temps d'attente défini. Permet de gerer des interpolation/animation d'une valeur (Lerp/Slerp...) avec des Actions appelés à chaque frames Appeler un callback aprés un certain temps Dépendant du TimeScale (ou pas[wip]) [WIP] Mettre en pause selon des parametres du jeu (menu de pause, cinématique, etc..) Note: voir @{logiked.source.utilities.TimerExtention} pour des fonctions utiles que vous pouvez utiliser même sur des timer pas assignés. [WIP] InputStorage Permet de faire passerelle entre l'input system 2.0 unity et le fonctionnement de la version 1.0. Pouvoir faire des if(KeyPressed) c'est quand même vraiment utile parfois au lieu des events."
  },
  "articles/MainSection/intro.html": {
    "href": "articles/MainSection/intro.html",
    "title": "Getting started | Example Unity documentation",
    "keywords": "Getting started Logiked Assemblies c'est quoi ? Installation Cloner le repo dans le projet unity (ici dans Plugins/LogikedAssemblies). Il est possible que vous ayez besoin d'ajouter le plugin au Gitignore du repo de votre projet. Normalement vous avez maintenant accés à une section \"Logiked\" dans la barre de menus. Depuis cette fenetres vous pouvez choisir les plugins utiles a votre jeu. Notez qu'a partir de maintenant, vous avez accés à l'assembly LogikedSource, qui est la base de tout les autres. Dedans vous y trouverez Un système de manager pour votre jeu Un système de base de données pour vos ScriptableObjects Un système d'attributs amélioré et des attributs utiles Un grand nombre d'extentions pour les type de base Votre scène de base Redéfinissez la classe snigleton BaseGameManager, ce sera le point d'entré de votre jeu. Si vous avez la flemme vous pouvez utiliser temporairement le composant @\"logiked.source.external.ExampleGameManager\" déja défini. Vous pouvez obter pour l'organisation suivante : Les plis à prendre A partir de maintenant il y à certaines règles à respecter,entre vous et logiked. Soyez gentil avec lui et il vous rendra la pareille. Pour instancier des GameObject, favorisez l'extentions GameObject.Inst() dans @\"logiked.source.utilities.GenericsExtentions\". Les Objets instanciés sont alors stockés dans le transform BaseGameManager.TempInstanceParent."
  },
  "index.html": {
    "href": "index.html",
    "title": "Logiked Assemblies Package | Example Unity documentation",
    "keywords": "Logiked Assemblies Package Mais pourquoi ? Le LogikedAssemblyPackages à été crée dans le but de subvenir aux problématiques habituelles de conception de jeu sur Unity, tout en apportant des fonctionnalités afin d’optimiser les projets de jeu. de toutes sortes. Le package est composé d’une multitude d’Assembly sélectionnables selon le type de projets. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}